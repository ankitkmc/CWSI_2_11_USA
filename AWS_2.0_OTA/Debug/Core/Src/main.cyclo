../Drivers/CMSIS/Include/core_cm4.h:1933:34:void __NVIC_SystemReset()	1
E:\Programs\STM32CubeIDE_1.14.1\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.11.3.rel1.win32_1.1.100.202309141235\tools\arm-none-eabi\include\c++\11.3.1\bits\char_traits.h:372:7:static int std::char_traits<char>::compare(const char_type*, const char_type*, std::size_t)	2
E:\Programs\STM32CubeIDE_1.14.1\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.11.3.rel1.win32_1.1.100.202309141235\tools\arm-none-eabi\include\c++\11.3.1\bits\char_traits.h:393:7:static std::size_t std::char_traits<char>::length(const char_type*)	1
E:\Programs\STM32CubeIDE_1.14.1\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.11.3.rel1.win32_1.1.100.202309141235\tools\arm-none-eabi\include\c++\11.3.1\arm-none-eabi\thumb\v7e-m+fp\hard\bits\gthr-default.h:229:1:int __gthread_key_delete(__gthread_key_t)	1
E:\Programs\STM32CubeIDE_1.14.1\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.11.3.rel1.win32_1.1.100.202309141235\tools\arm-none-eabi\include\c++\11.3.1\bits\basic_string.h:6660:3:std::string std::__cxx11::to_string(int)	2
E:\Programs\STM32CubeIDE_1.14.1\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.11.3.rel1.win32_1.1.100.202309141235\tools\arm-none-eabi\include\c++\11.3.1\bits\basic_string.h:6690:3:std::string std::__cxx11::to_string(long unsigned int)	1
E:\Programs\STM32CubeIDE_1.14.1\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.11.3.rel1.win32_1.1.100.202309141235\tools\arm-none-eabi\include\c++\11.3.1\bits\basic_string.h:6710:3:std::string std::__cxx11::to_string(long long unsigned int)	1
E:\Programs\STM32CubeIDE_1.14.1\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.11.3.rel1.win32_1.1.100.202309141235\tools\bin/../lib/gcc/arm-none-eabi/11.3.1/../../../../arm-none-eabi/include/c++/11.3.1/type_traits:70:17:constexpr std::integral_constant<_Tp, __v>::operator std::integral_constant<_Tp, __v>::value_type() const [with _Tp = bool; _Tp __v = true]	1
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/double_to_string.h:11:8:std::string d_t_h_s(uint32_t)	4
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/double_to_string.h:29:8:std::string d_t_s(double, int, bool)	6
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/double_to_string.h:61:8:double s_t_d(const string&)	14
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/double_to_string.h:108:8:std::string d_t_b_s(uint32_t, uint32_t, uint32_t)	6
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/M_USART.h:11:19:HAL_StatusTypeDef HAL_UARTEx_ReceiveToIdle(UART_HandleTypeDef*, std::string&, uint32_t)	20
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/M_USART.h:106:6:void UART_Init(UART_HandleTypeDef*, USART_TypeDef*, uint32_t)	2
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/M_USART.h:123:6:void ADC1_CHANNEL_INIT(uint32_t)	2
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Memory/../Strings/../Strings/Adapters/../../Strings/Adapters/RamString.hpp:24:3:ArduinoJson::V6211HB::detail::ZeroTerminatedRamString::ZeroTerminatedRamString(const char*)	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Memory/../Strings/../Strings/Adapters/../../Strings/Adapters/RamString.hpp:26:8:bool ArduinoJson::V6211HB::detail::ZeroTerminatedRamString::isNull() const	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Memory/../Strings/../Strings/Adapters/../../Strings/Adapters/RamString.hpp:30:10:size_t ArduinoJson::V6211HB::detail::ZeroTerminatedRamString::size() const	2
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Memory/../Strings/../Strings/Adapters/../../Strings/Adapters/RamString.hpp:34:8:char ArduinoJson::V6211HB::detail::ZeroTerminatedRamString::operator[](size_t) const	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Memory/../Strings/../Strings/Adapters/../../Strings/Adapters/RamString.hpp:84:3:ArduinoJson::V6211HB::detail::StaticStringAdapter::StaticStringAdapter(const char*)	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Memory/../Strings/../Strings/Adapters/../../Strings/Adapters/RamString.hpp:95:24:static ArduinoJson::V6211HB::detail::StringAdapter<const char*, void>::AdaptedString ArduinoJson::V6211HB::detail::StringAdapter<const char*, void>::adapt(const char*)	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Memory/../Strings/../Strings/Adapters/../../Strings/Adapters/RamString.hpp:104:3:ArduinoJson::V6211HB::detail::SizedRamString::SizedRamString(const char*, size_t)	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Memory/../Strings/../Strings/Adapters/../../Strings/Adapters/RamString.hpp:106:8:bool ArduinoJson::V6211HB::detail::SizedRamString::isNull() const	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Memory/../Strings/../Strings/Adapters/../../Strings/Adapters/RamString.hpp:110:10:size_t ArduinoJson::V6211HB::detail::SizedRamString::size() const	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Memory/../Strings/../Strings/Adapters/../../Strings/Adapters/RamString.hpp:114:8:char ArduinoJson::V6211HB::detail::SizedRamString::operator[](size_t) const	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Memory/../Strings/../Strings/Adapters/../../Strings/Adapters/RamString.hpp:124:29:ArduinoJson::V6211HB::detail::StringStoragePolicy::Copy ArduinoJson::V6211HB::detail::SizedRamString::storagePolicy() const	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Memory/../Strings/../Strings/Adapters/../../Strings/JsonString.hpp:19:3:ArduinoJson::V6211HB::JsonString::JsonString()	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Memory/../Strings/../Strings/Adapters/../../Strings/JsonString.hpp:21:3:ArduinoJson::V6211HB::JsonString::JsonString(const char*, ArduinoJson::V6211HB::JsonString::Ownership)	2
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Memory/../Strings/../Strings/Adapters/../../Strings/JsonString.hpp:24:3:ArduinoJson::V6211HB::JsonString::JsonString(const char*, size_t, ArduinoJson::V6211HB::JsonString::Ownership)	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Memory/../Strings/../Strings/Adapters/../../Strings/JsonString.hpp:28:15:const char* ArduinoJson::V6211HB::JsonString::c_str() const	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Memory/../Strings/../Strings/Adapters/../../Strings/JsonString.hpp:39:8:bool ArduinoJson::V6211HB::JsonString::isLinked() const	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Memory/../Strings/../Strings/Adapters/../../Strings/JsonString.hpp:44:10:size_t ArduinoJson::V6211HB::JsonString::size() const	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Memory/../Strings/../Strings/Adapters/../../Strings/JsonString.hpp:49:12:ArduinoJson::V6211HB::JsonString::operator bool() const	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Memory/../Strings/../Strings/Adapters/JsonString.hpp:15:3:ArduinoJson::V6211HB::detail::JsonStringAdapter::JsonStringAdapter(const ArduinoJson::V6211HB::JsonString&)	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Memory/../Strings/../Strings/Adapters/JsonString.hpp:31:24:static ArduinoJson::V6211HB::detail::StringAdapter<ArduinoJson::V6211HB::JsonString>::AdaptedString ArduinoJson::V6211HB::detail::StringAdapter<ArduinoJson::V6211HB::JsonString>::adapt(const ArduinoJson::V6211HB::JsonString&)	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Memory/../Variant/../Variant/../Collection/CollectionData.hpp:69:16:ArduinoJson::V6211HB::detail::VariantSlot* ArduinoJson::V6211HB::detail::CollectionData::head() const	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Memory/../Variant/VariantSlot.hpp:32:16:ArduinoJson::V6211HB::detail::VariantData* ArduinoJson::V6211HB::detail::VariantSlot::data()	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Memory/../Variant/VariantSlot.hpp:36:22:const ArduinoJson::V6211HB::detail::VariantData* ArduinoJson::V6211HB::detail::VariantSlot::data() const	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Memory/../Variant/VariantSlot.hpp:40:16:ArduinoJson::V6211HB::detail::VariantSlot* ArduinoJson::V6211HB::detail::VariantSlot::next()	2
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Memory/../Variant/VariantSlot.hpp:44:22:const ArduinoJson::V6211HB::detail::VariantSlot* ArduinoJson::V6211HB::detail::VariantSlot::next() const	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Memory/../Variant/VariantSlot.hpp:62:8:void ArduinoJson::V6211HB::detail::VariantSlot::setNext(ArduinoJson::V6211HB::detail::VariantSlot*)	2
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Memory/../Variant/VariantSlot.hpp:70:8:void ArduinoJson::V6211HB::detail::VariantSlot::setNextNotNull(ArduinoJson::V6211HB::detail::VariantSlot*)	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Memory/../Variant/VariantSlot.hpp:79:8:void ArduinoJson::V6211HB::detail::VariantSlot::setKey(ArduinoJson::V6211HB::JsonString)	2
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Memory/../Variant/VariantSlot.hpp:88:15:const char* ArduinoJson::V6211HB::detail::VariantSlot::key() const	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Memory/../Variant/VariantSlot.hpp:92:8:bool ArduinoJson::V6211HB::detail::VariantSlot::ownsKey() const	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Memory/../Variant/VariantSlot.hpp:96:8:void ArduinoJson::V6211HB::detail::VariantSlot::clear()	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Memory/MemoryPool.hpp:39:3:ArduinoJson::V6211HB::detail::MemoryPool::MemoryPool(char*, size_t)	3
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Memory/MemoryPool.hpp:64:8:bool ArduinoJson::V6211HB::detail::MemoryPool::overflowed() const	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Memory/MemoryPool.hpp:68:16:ArduinoJson::V6211HB::detail::VariantSlot* ArduinoJson::V6211HB::detail::MemoryPool::allocVariant()	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Memory/MemoryPool.hpp:93:8:void ArduinoJson::V6211HB::detail::MemoryPool::getFreeZone(char**, size_t*) const	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Memory/MemoryPool.hpp:98:15:const char* ArduinoJson::V6211HB::detail::MemoryPool::saveStringFromFreeZone(size_t)	2
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Memory/MemoryPool.hpp:112:8:void ArduinoJson::V6211HB::detail::MemoryPool::markAsOverflowed()	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Memory/MemoryPool.hpp:116:8:void ArduinoJson::V6211HB::detail::MemoryPool::clear()	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Memory/MemoryPool.hpp:122:8:bool ArduinoJson::V6211HB::detail::MemoryPool::canAlloc(size_t) const	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Memory/MemoryPool.hpp:170:8:void ArduinoJson::V6211HB::detail::MemoryPool::checkInvariants()	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Memory/MemoryPool.hpp:193:9:char* ArduinoJson::V6211HB::detail::MemoryPool::allocString(size_t)	2
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Memory/MemoryPool.hpp:209:9:void* ArduinoJson::V6211HB::detail::MemoryPool::allocRight(size_t)	2
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/../Variant/VariantData.hpp:21:3:ArduinoJson::V6211HB::detail::VariantData::VariantData()	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/../Variant/VariantData.hpp:86:19:ArduinoJson::V6211HB::detail::CollectionData* ArduinoJson::V6211HB::detail::VariantData::asObject()	2
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/../Variant/VariantData.hpp:90:25:const ArduinoJson::V6211HB::detail::CollectionData* ArduinoJson::V6211HB::detail::VariantData::asObject() const	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/../Variant/VariantData.hpp:122:8:bool ArduinoJson::V6211HB::detail::VariantData::isFloat() const	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/../Variant/VariantData.hpp:130:8:bool ArduinoJson::V6211HB::detail::VariantData::isObject() const	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/../Variant/VariantData.hpp:134:8:bool ArduinoJson::V6211HB::detail::VariantData::isNull() const	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/../Variant/VariantData.hpp:138:8:bool ArduinoJson::V6211HB::detail::VariantData::isEnclosed() const	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/../Variant/VariantData.hpp:153:8:void ArduinoJson::V6211HB::detail::VariantData::setBoolean(bool)	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/../Variant/VariantData.hpp:158:8:void ArduinoJson::V6211HB::detail::VariantData::setFloat(ArduinoJson::V6211HB::JsonFloat)	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/../Variant/VariantData.hpp:199:8:void ArduinoJson::V6211HB::detail::VariantData::setNull()	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/../Variant/VariantData.hpp:203:8:void ArduinoJson::V6211HB::detail::VariantData::setString(ArduinoJson::V6211HB::JsonString)	2
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/../Variant/VariantData.hpp:213:19:ArduinoJson::V6211HB::detail::CollectionData& ArduinoJson::V6211HB::detail::VariantData::toArray()	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/../Variant/VariantData.hpp:219:19:ArduinoJson::V6211HB::detail::CollectionData& ArduinoJson::V6211HB::detail::VariantData::toObject()	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/../Variant/VariantData.hpp:287:11:uint8_t ArduinoJson::V6211HB::detail::VariantData::type() const	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/../Variant/VariantData.hpp:302:8:void ArduinoJson::V6211HB::detail::VariantData::setType(uint8_t)	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/../Variant/VariantData.hpp:308:5:ArduinoJson::V6211HB::detail::VariantData::VariantStringSetter::VariantStringSetter(ArduinoJson::V6211HB::detail::VariantData*)	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/JsonVariantConst.hpp:33:3:ArduinoJson::V6211HB::JsonVariantConst::JsonVariantConst()	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/JsonVariantConst.hpp:36:12:ArduinoJson::V6211HB::JsonVariantConst::JsonVariantConst(const ArduinoJson::V6211HB::detail::VariantData*)	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/JsonVariantConst.hpp:136:30:const ArduinoJson::V6211HB::detail::VariantData* ArduinoJson::V6211HB::JsonVariantConst::getData() const	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Array/../Variant/JsonVariant.hpp:22:3:ArduinoJson::V6211HB::JsonVariant::JsonVariant(ArduinoJson::V6211HB::detail::MemoryPool*, ArduinoJson::V6211HB::detail::VariantData*)	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Array/../Variant/SlotFunctions.hpp:13:3:ArduinoJson::V6211HB::detail::SlotKeySetter::SlotKeySetter(ArduinoJson::V6211HB::detail::VariantSlot*)	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Array/../Variant/SlotFunctions.hpp:33:15:size_t ArduinoJson::V6211HB::detail::slotSize(const ArduinoJson::V6211HB::detail::VariantSlot*)	2
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Array/../Variant/SlotFunctions.hpp:42:21:ArduinoJson::V6211HB::detail::VariantData* ArduinoJson::V6211HB::detail::slotData(ArduinoJson::V6211HB::detail::VariantSlot*)	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Array/JsonArrayIterator.hpp:88:3:ArduinoJson::V6211HB::JsonArrayConstIterator::JsonArrayConstIterator()	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Array/JsonArrayIterator.hpp:89:12:ArduinoJson::V6211HB::JsonArrayConstIterator::JsonArrayConstIterator(const ArduinoJson::V6211HB::detail::VariantSlot*)	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Array/JsonArrayIterator.hpp:92:20:ArduinoJson::V6211HB::JsonVariantConst ArduinoJson::V6211HB::JsonArrayConstIterator::operator*() const	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Array/JsonArrayIterator.hpp:99:8:bool ArduinoJson::V6211HB::JsonArrayConstIterator::operator==(const ArduinoJson::V6211HB::JsonArrayConstIterator&) const	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Array/JsonArrayIterator.hpp:107:27:ArduinoJson::V6211HB::JsonArrayConstIterator& ArduinoJson::V6211HB::JsonArrayConstIterator::operator++()	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Object/../Object/../Object/../Object/JsonPair.hpp:45:3:ArduinoJson::V6211HB::JsonPairConst::JsonPairConst(const ArduinoJson::V6211HB::detail::VariantSlot*)	3
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Object/../Object/../Object/../Object/JsonPair.hpp:54:14:ArduinoJson::V6211HB::JsonString ArduinoJson::V6211HB::JsonPairConst::key() const	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Object/../Object/../Object/../Object/JsonPair.hpp:59:20:ArduinoJson::V6211HB::JsonVariantConst ArduinoJson::V6211HB::JsonPairConst::value() const	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Object/../Object/../Object/JsonObjectIterator.hpp:71:3:ArduinoJson::V6211HB::JsonPairConstPtr::JsonPairConstPtr(const ArduinoJson::V6211HB::detail::VariantSlot*)	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Object/../Object/../Object/JsonObjectIterator.hpp:73:24:const ArduinoJson::V6211HB::JsonPairConst* ArduinoJson::V6211HB::JsonPairConstPtr::operator->() const	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Object/../Object/../Object/JsonObjectIterator.hpp:89:3:ArduinoJson::V6211HB::JsonObjectConstIterator::JsonObjectConstIterator()	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Object/../Object/../Object/JsonObjectIterator.hpp:91:12:ArduinoJson::V6211HB::JsonObjectConstIterator::JsonObjectConstIterator(const ArduinoJson::V6211HB::detail::VariantSlot*)	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Object/../Object/../Object/JsonObjectIterator.hpp:97:20:ArduinoJson::V6211HB::JsonPairConstPtr ArduinoJson::V6211HB::JsonObjectConstIterator::operator->()	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Object/../Object/../Object/JsonObjectIterator.hpp:105:8:bool ArduinoJson::V6211HB::JsonObjectConstIterator::operator!=(const ArduinoJson::V6211HB::JsonObjectConstIterator&) const	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Object/../Object/../Object/JsonObjectIterator.hpp:109:28:ArduinoJson::V6211HB::JsonObjectConstIterator& ArduinoJson::V6211HB::JsonObjectConstIterator::operator++()	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Object/../Object/JsonObjectConst.hpp:25:3:ArduinoJson::V6211HB::JsonObjectConst::JsonObjectConst(const ArduinoJson::V6211HB::detail::CollectionData*)	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Document/../Document/../Document/JsonDocument.hpp:42:8:void ArduinoJson::V6211HB::JsonDocument::clear()	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Document/../Document/../Document/JsonDocument.hpp:284:3:ArduinoJson::V6211HB::JsonDocument::JsonDocument(char*, size_t)	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Document/../Document/../Document/JsonDocument.hpp:286:3:ArduinoJson::V6211HB::JsonDocument::~JsonDocument()	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Document/../Document/../Document/JsonDocument.hpp:296:20:ArduinoJson::V6211HB::JsonVariantConst ArduinoJson::V6211HB::JsonDocument::getVariant() const	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Document/../Document/../Document/JsonDocument.hpp:304:23:ArduinoJson::V6211HB::detail::MemoryPool* ArduinoJson::V6211HB::JsonDocument::getPool()	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Document/../Document/../Document/JsonDocument.hpp:308:24:ArduinoJson::V6211HB::detail::VariantData* ArduinoJson::V6211HB::JsonDocument::getData()	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Document/../Document/../Document/JsonDocument.hpp:312:30:const ArduinoJson::V6211HB::detail::VariantData* ArduinoJson::V6211HB::JsonDocument::getData() const	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Document/../Document/../Document/JsonDocument.hpp:316:24:ArduinoJson::V6211HB::detail::VariantData* ArduinoJson::V6211HB::JsonDocument::getOrCreateData()	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Collection/CollectionImpl.hpp:14:21:ArduinoJson::V6211HB::detail::VariantSlot* ArduinoJson::V6211HB::detail::CollectionData::addSlot(ArduinoJson::V6211HB::detail::MemoryPool*)	3
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Collection/CollectionImpl.hpp:32:21:ArduinoJson::V6211HB::detail::VariantData* ArduinoJson::V6211HB::detail::CollectionData::addElement(ArduinoJson::V6211HB::detail::MemoryPool*)	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Collection/CollectionImpl.hpp:47:13:void ArduinoJson::V6211HB::detail::CollectionData::clear()	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Collection/CollectionImpl.hpp:96:21:ArduinoJson::V6211HB::detail::VariantSlot* ArduinoJson::V6211HB::detail::CollectionData::getPreviousSlot(ArduinoJson::V6211HB::detail::VariantSlot*) const	3
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Collection/CollectionImpl.hpp:149:13:void ArduinoJson::V6211HB::detail::CollectionData::removeSlot(ArduinoJson::V6211HB::detail::VariantSlot*)	4
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Collection/CollectionImpl.hpp:176:15:size_t ArduinoJson::V6211HB::detail::CollectionData::size() const	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/../Json/../Json/../Json/EscapeSequence.hpp:14:15:static char ArduinoJson::V6211HB::detail::EscapeSequence::escapeChar(char)	3
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/../Json/../Json/../Json/EscapeSequence.hpp:23:15:static char ArduinoJson::V6211HB::detail::EscapeSequence::unescapeChar(char)	3
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/../Json/../Json/../Json/EscapeSequence.hpp:35:22:static const char* ArduinoJson::V6211HB::detail::EscapeSequence::escapeTable(bool)	2
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/ConverterImpl.hpp:143:21:static ArduinoJson::V6211HB::JsonString ArduinoJson::V6211HB::Converter<ArduinoJson::V6211HB::JsonString>::fromJson(ArduinoJson::V6211HB::JsonVariantConst)	2
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/ConverterImpl.hpp:283:13:void ArduinoJson::V6211HB::convertFromJson(ArduinoJson::V6211HB::JsonVariantConst, std::string&)	2
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/VariantCompare.hpp:73:17:ArduinoJson::V6211HB::detail::CompareResult ArduinoJson::V6211HB::detail::NullComparer::visitNull()	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/VariantCompare.hpp:86:12:ArduinoJson::V6211HB::detail::ArrayComparer::ArrayComparer(const ArduinoJson::V6211HB::detail::CollectionData&)	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/VariantCompare.hpp:88:17:ArduinoJson::V6211HB::detail::CompareResult ArduinoJson::V6211HB::detail::ArrayComparer::visitArray(const ArduinoJson::V6211HB::detail::CollectionData&)	12
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/VariantCompare.hpp:99:12:ArduinoJson::V6211HB::detail::ObjectComparer::ObjectComparer(const ArduinoJson::V6211HB::detail::CollectionData&)	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/VariantCompare.hpp:101:17:ArduinoJson::V6211HB::detail::CompareResult ArduinoJson::V6211HB::detail::ObjectComparer::visitObject(const ArduinoJson::V6211HB::detail::CollectionData&)	9
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/VariantCompare.hpp:113:12:ArduinoJson::V6211HB::detail::RawComparer::RawComparer(const char*, size_t)	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/VariantCompare.hpp:116:17:ArduinoJson::V6211HB::detail::CompareResult ArduinoJson::V6211HB::detail::RawComparer::visitRawJson(const char*, size_t)	4
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/VariantCompare.hpp:131:12:ArduinoJson::V6211HB::detail::VariantComparer::VariantComparer(const ArduinoJson::V6211HB::detail::VariantData*)	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/VariantCompare.hpp:133:17:ArduinoJson::V6211HB::detail::CompareResult ArduinoJson::V6211HB::detail::VariantComparer::visitArray(const ArduinoJson::V6211HB::detail::CollectionData&)	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/VariantCompare.hpp:138:17:ArduinoJson::V6211HB::detail::CompareResult ArduinoJson::V6211HB::detail::VariantComparer::visitObject(const ArduinoJson::V6211HB::detail::CollectionData&)	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/VariantCompare.hpp:143:17:ArduinoJson::V6211HB::detail::CompareResult ArduinoJson::V6211HB::detail::VariantComparer::visitFloat(ArduinoJson::V6211HB::JsonFloat)	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/VariantCompare.hpp:148:17:ArduinoJson::V6211HB::detail::CompareResult ArduinoJson::V6211HB::detail::VariantComparer::visitString(const char*, size_t)	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/VariantCompare.hpp:153:17:ArduinoJson::V6211HB::detail::CompareResult ArduinoJson::V6211HB::detail::VariantComparer::visitRawJson(const char*, size_t)	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/VariantCompare.hpp:158:17:ArduinoJson::V6211HB::detail::CompareResult ArduinoJson::V6211HB::detail::VariantComparer::visitSignedInteger(ArduinoJson::V6211HB::JsonInteger)	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/VariantCompare.hpp:163:17:ArduinoJson::V6211HB::detail::CompareResult ArduinoJson::V6211HB::detail::VariantComparer::visitUnsignedInteger(ArduinoJson::V6211HB::JsonUInt)	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/VariantCompare.hpp:168:17:ArduinoJson::V6211HB::detail::CompareResult ArduinoJson::V6211HB::detail::VariantComparer::visitBoolean(bool)	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/VariantCompare.hpp:173:17:ArduinoJson::V6211HB::detail::CompareResult ArduinoJson::V6211HB::detail::VariantComparer::visitNull()	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/../Numbers/../Polyfills/ctype.hpp:12:13:bool ArduinoJson::V6211HB::detail::isdigit(char)	3
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/../Numbers/parseNumber.hpp:21:13:bool ArduinoJson::V6211HB::detail::parseNumber(const char*, ArduinoJson::V6211HB::detail::VariantData&)	29
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/VariantImpl.hpp:73:19:ArduinoJson::V6211HB::JsonString ArduinoJson::V6211HB::detail::VariantData::asString() const	3
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Json/../Deserialization/../Deserialization/DeserializationError.hpp:29:3:ArduinoJson::V6211HB::DeserializationError::DeserializationError(ArduinoJson::V6211HB::DeserializationError::Code)	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Json/../Deserialization/../Deserialization/../Deserialization/Filter.hpp:47:8:bool ArduinoJson::V6211HB::detail::AllowAllFilter::allow() const	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Json/../Deserialization/../Deserialization/../Deserialization/Filter.hpp:51:8:bool ArduinoJson::V6211HB::detail::AllowAllFilter::allowArray() const	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Json/../Deserialization/../Deserialization/../Deserialization/Filter.hpp:55:8:bool ArduinoJson::V6211HB::detail::AllowAllFilter::allowObject() const	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Json/../Deserialization/../Deserialization/../Deserialization/Filter.hpp:59:8:bool ArduinoJson::V6211HB::detail::AllowAllFilter::allowValue() const	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Json/../Deserialization/../Deserialization/../Deserialization/NestingLimit.hpp:15:3:ArduinoJson::V6211HB::DeserializationOption::NestingLimit::NestingLimit()	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Json/../Deserialization/../Deserialization/../Deserialization/NestingLimit.hpp:16:12:ArduinoJson::V6211HB::DeserializationOption::NestingLimit::NestingLimit(uint8_t)	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Json/../Deserialization/../Deserialization/../Deserialization/NestingLimit.hpp:18:16:ArduinoJson::V6211HB::DeserializationOption::NestingLimit ArduinoJson::V6211HB::DeserializationOption::NestingLimit::decrement() const	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Json/../Deserialization/../Deserialization/../Deserialization/NestingLimit.hpp:23:8:bool ArduinoJson::V6211HB::DeserializationOption::NestingLimit::reached() const	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Json/../Deserialization/../Deserialization/DeserializationOptions.hpp:30:47:ArduinoJson::V6211HB::detail::DeserializationOptions<ArduinoJson::V6211HB::detail::AllowAllFilter> ArduinoJson::V6211HB::detail::makeDeserializationOptions(ArduinoJson::V6211HB::DeserializationOption::NestingLimit)	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Json/../Deserialization/../StringStorage/../StringStorage/StringCopier.hpp:13:3:ArduinoJson::V6211HB::detail::StringCopier::StringCopier(ArduinoJson::V6211HB::detail::MemoryPool*)	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Json/../Deserialization/../StringStorage/../StringStorage/StringCopier.hpp:15:8:void ArduinoJson::V6211HB::detail::StringCopier::startString()	2
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Json/../Deserialization/../StringStorage/../StringStorage/StringCopier.hpp:22:14:ArduinoJson::V6211HB::JsonString ArduinoJson::V6211HB::detail::StringCopier::save()	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Json/../Deserialization/../StringStorage/../StringStorage/StringCopier.hpp:39:8:void ArduinoJson::V6211HB::detail::StringCopier::append(char)	2
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Json/../Deserialization/../StringStorage/../StringStorage/StringCopier.hpp:46:8:bool ArduinoJson::V6211HB::detail::StringCopier::isValid() const	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Json/../Deserialization/../StringStorage/../StringStorage/StringCopier.hpp:54:14:ArduinoJson::V6211HB::JsonString ArduinoJson::V6211HB::detail::StringCopier::str() const	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Json/../Json/Utf16.hpp:24:13:bool ArduinoJson::V6211HB::detail::Utf16::isHighSurrogate(uint16_t)	3
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Json/../Json/Utf16.hpp:28:13:bool ArduinoJson::V6211HB::detail::Utf16::isLowSurrogate(uint16_t)	3
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Json/../Json/Utf16.hpp:34:3:ArduinoJson::V6211HB::detail::Utf16::Codepoint::Codepoint()	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Json/../Json/Utf16.hpp:36:8:bool ArduinoJson::V6211HB::detail::Utf16::Codepoint::append(uint16_t)	3
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Json/../Json/Utf16.hpp:52:12:uint32_t ArduinoJson::V6211HB::detail::Utf16::Codepoint::value() const	1
E:/repositories 2/LIBRARY/CUSTOM/INCLUDER.h:58:6:void delay(uint32_t)	2
E:/repositories 2/LIBRARY/CUSTOM/INCLUDER.h:68:13:void refresh_counter()	1
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/VARIABLES.h:43:3:VARIABLES::VARIABLES(DynamicArray<VARIABLES*>*, std::string, bool)	2
E:/repositories 2/LIBRARY/CUSTOM/INCLUDER.h:42:8:Parameter::Parameter()	1
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/VARIABLES.h:117:10:std::string VARIABLES::GET_VALUE(uint8_t)	1
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/VARIABLES.h:125:10:std::string VARIABLES::GET_NAME(uint8_t)	1
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/VARIABLES.h:132:12:uint32_t VARIABLES::GET_PARA_SIZE()	1
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/VARIABLES.h:139:7:int VARIABLES::GET_index() const	1
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/VARIABLES.h:146:17:const string& VARIABLES::GET_VAR_NAME() const	1
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/VARIABLES.h:153:8:bool VARIABLES::IS_add_to_json() const	1
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/VARIABLES.h:167:10:double VARIABLES::GET_VAR_VALUE_CONN() const	1
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/VARIABLES.h:174:8:void VARIABLES::SET_VAR_VALUE_CONN(double)	1
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/PWR_PIN.h:18:3:PWR_PIN::PWR_PIN(GPIO_TypeDef*, uint16_t)	1
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/PWR_PIN.h:24:8:void PWR_PIN::SET_PWRPIN(GPIO_TypeDef*, uint16_t)	1
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/PWR_PIN.h:34:8:void PWR_PIN::SET(bool, uint32_t)	2
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/PWR_PIN.h:38:8:void PWR_PIN::PULSE(bool, uint32_t, uint32_t)	1
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/MUX.h:15:2:MUX::MUX(PWR_PIN*, PWR_PIN*, PWR_PIN*)	1
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/PRINT_CONTROL.h:19:6:void set_both_print(bool)	1
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/PRINT_CONTROL.h:24:6:void set_uart_print(bool)	1
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/PRINT_CONTROL.h:27:6:bool is_uart_print()	1
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/PRINT_CONTROL.h:31:6:void set_ble_print(bool)	1
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/PRINT_CONTROL.h:34:6:bool is_ble_print()	1
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/PRINT_CONTROL.h:40:6:void save_ble_print(bool)	1
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/PRINT_CONTROL.h:44:6:void restore_ble_print()	1
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/PRINT_CONTROL.h:48:6:void save_uart_print(bool)	1
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/PRINT_CONTROL.h:52:6:void restore_uart_print()	1
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/PRINT_CONTROL.h:56:6:bool is_any_print()	3
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/PRINT_CONTROL.h:59:6:void save_both_print(bool)	1
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/PRINT_CONTROL.h:63:6:void restore_both_print()	1
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/UART_PRINTER.h:17:3:UART_PRINTER::UART_PRINTER(UART_HandleTypeDef*, std::string)	1
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/UART_PRINTER.h:47:10:std::string UART_PRINTER::Read(uint32_t)	5
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/UART_PRINTER.h:73:8:void UART_PRINTER::Print(std::string)	2
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/UART_PRINTER.h:101:10:std::string UART_PRINTER::get_pass()	1
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/NEOWAY.h:36:3:NEOWAY::NEOWAY(UART_HandleTypeDef*)	1
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/NEOWAY.h:49:8:void NEOWAY::START()	1
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/NEOWAY.h:62:10:std::string NEOWAY::GET_BLE_RESP()	1
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/NEOWAY.h:68:10:std::string NEOWAY::GET_SUB_RESP()	1
E:\Programs\STM32CubeIDE_1.14.1\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.11.3.rel1.win32_1.1.100.202309141235\tools\arm-none-eabi\include\c++\11.3.1\initializer_list:71:7:constexpr std::initializer_list<_E>::size_type std::initializer_list<_E>::size() const [with _E = long unsigned int]	1
E:\Programs\STM32CubeIDE_1.14.1\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.11.3.rel1.win32_1.1.100.202309141235\tools\arm-none-eabi\include\c++\11.3.1\initializer_list:71:7:constexpr std::initializer_list<_E>::size_type std::initializer_list<_E>::size() const [with _E = std::__cxx11::basic_string<char>]	1
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/NEOWAY.h:89:10:std::string NEOWAY::SEND_RECIEVE(std::string, std::initializer_list<long unsigned int>, uint16_t, std::initializer_list<std::__cxx11::basic_string<char> >)	19
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/NEOWAY.h:198:8:void NEOWAY::SEND_RECIEVE_POINTER(std::string, std::initializer_list<long unsigned int>, uint16_t, std::initializer_list<std::__cxx11::basic_string<char> >, std::string&)	13
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/NEOWAY.h:288:17:NEOWAY_RETURN NEOWAY::CHECK_RESPONSE(std::string*, std::string*)	11
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/NEOWAY.h:315:17:const string& NEOWAY::GET_data_pub_topic() const	1
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/NEOWAY.h:323:8:void NEOWAY::SET_data_pub_topic(const string&)	1
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/NEOWAY.h:343:8:void NEOWAY::BLE_NAME(std::string)	4
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/NEOWAY.h:352:8:void NEOWAY::BLE_SETUP(std::string)	8
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/NEOWAY.h:379:10:std::string NEOWAY::BLE_READ(uint32_t)	6
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/NEOWAY.h:395:8:void NEOWAY::BLE_SEND(std::string)	8
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/NEOWAY.h:411:8:void NEOWAY::POWER_ON()	5
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/NEOWAY.h:424:8:void NEOWAY::POWER_OFF()	1
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/NEOWAY.h:429:8:void NEOWAY::INIT()	9
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/UART_DEBUG.h:23:3:UART_DEBUG::UART_DEBUG(DynamicArray<VARIABLES*>*, UART_PRINTER*, NEOWAY*)	1
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/UART_DEBUG.h:29:8:void UART_DEBUG::Print2(std::string)	1
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/UART_DEBUG.h:36:8:void UART_DEBUG::Json_print(std::string, std::string, bool)	8
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/UART_DEBUG.h:96:10:std::string UART_DEBUG::BLE_Read(uint32_t)	1
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/UART_DEBUG.h:101:10:std::string UART_DEBUG::Ser_Read(uint32_t)	1
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/UART_DEBUG.h:110:10:std::string UART_DEBUG::Both_Get_pass(uint32_t, int*)	6
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/UART_DEBUG.h:137:10:std::string UART_DEBUG::Both_Read(uint32_t)	6
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/UART_DEBUG.h:156:17:NEOWAY_RETURN UART_DEBUG::Both_read_check(std::string, uint32_t, std::string, std::string*)	6
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/UART_DEBUG.h:186:17:NEOWAY_RETURN UART_DEBUG::CHECK_RESPONSE(std::string*, std::string*)	7
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/VARIABLES.h:22:7:VARIABLES::~VARIABLES()	1
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/BUTTON_READ.h:22:3:BUTTON_READ::BUTTON_READ(DynamicArray<VARIABLES*>*, std::string, bool)	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Document/StaticJsonDocument.hpp:13:7:ArduinoJson::V6211HB::StaticJsonDocument<1024>::~StaticJsonDocument()	1
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/JSON_HANDLER.h:29:3:JSON_HANDLER::JSON_HANDLER(DynamicArray<VARIABLES*>&)	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Object/../Object/MemberProxy.hpp:14:7:ArduinoJson::V6211HB::detail::MemberProxy<ArduinoJson::V6211HB::JsonDocument&, std::__cxx11::basic_string<char> >::~MemberProxy()	1
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/JSON_HANDLER.h:50:8:void JSON_HANDLER::MAKE_DATA_JSON(JSON_HANDLER::clear_enum, bool)	11
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/JSON_HANDLER.h:87:8:void JSON_HANDLER::MAKE_META_JSON(JSON_HANDLER::clear_enum, bool)	6
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/JSON_HANDLER.h:100:10:std::string JSON_HANDLER::GET_JSON_STRING()	1
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/JSON_HANDLER.h:104:12:uint32_t JSON_HANDLER::GET_JSON_STRING_LEN()	1
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/JSON_HANDLER.h:108:10:std::string JSON_HANDLER::GET_META_JSON_STRING()	1
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/JSON_HANDLER.h:126:8:void JSON_HANDLER::CLEAR(JSON_HANDLER::clear_enum)	5
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/JSON_HANDLER.h:142:8:void JSON_HANDLER::CLEAR_META(JSON_HANDLER::clear_enum)	5
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/JSON_HANDLER.h:169:8:bool JSON_HANDLER::COMPARE_META_DATA_JSON(ArduinoJson::V6211HB::StaticJsonDocument<1024>&) const	1
../Core/Src/main.cpp:64:6:void go2app(uint32_t)	1
E:/repositories 2/LIBRARY/CUSTOM/FUNCTIONS.h:135:6:void PassAuthen()	4
E:/repositories 2/LIBRARY/CUSTOM/FUNCTIONS.h:176:8:double Get_entered_value(uint16_t)	1
E:/repositories 2/LIBRARY/CUSTOM/FUNCTIONS.h:187:6:void MENU_PRINT(bool)	18
E:/repositories 2/LIBRARY/CUSTOM/FUNCTIONS.h:267:6:void save_meta_neoway()	1
E:/repositories 2/LIBRARY/CUSTOM/FUNCTIONS.h:279:6:void UPDATE_CONFIG(const ArduinoJson::V6211HB::StaticJsonDocument<1024>&)	3
E:/repositories 2/LIBRARY/CUSTOM/FUNCTIONS.h:297:6:void write_file(std::string&, std::string)	3
E:/repositories 2/LIBRARY/CUSTOM/FUNCTIONS.h:311:6:void config_file()	3
E:/repositories 2/LIBRARY/CUSTOM/FUNCTIONS.h:330:6:void neoway_sub(std::string)	2
E:/repositories 2/LIBRARY/CUSTOM/FUNCTIONS.h:340:6:void neoway_read()	1
E:/repositories 2/LIBRARY/CUSTOM/FUNCTIONS.h:355:6:void GET_LINKS(std::string&, std::string&)	8
E:/repositories 2/LIBRARY/CUSTOM/FUNCTIONS.h:418:6:void add_certificate(std::string, std::string*)	3
E:/repositories 2/LIBRARY/CUSTOM/FUNCTIONS.h:437:8:std::string delete_certificate(std::string)	2
E:/repositories 2/LIBRARY/CUSTOM/FUNCTIONS.h:448:8:std::string check_certificate(std::string)	2
E:/repositories 2/LIBRARY/CUSTOM/FUNCTIONS.h:459:6:void check_all_certificates()	8
E:/repositories 2/LIBRARY/CUSTOM/FUNCTIONS.h:498:11:LOOP_CONT JSON_EXTRACTER(std::string*, ArduinoJson::V6211HB::StaticJsonDocument<1024>*)	3
E:/repositories 2/LIBRARY/CUSTOM/FUNCTIONS.h:521:6:void cert_add()	2
E:/repositories 2/LIBRARY/CUSTOM/FUNCTIONS.h:564:6:void getcertificate(std::string*)	1
E:/repositories 2/LIBRARY/CUSTOM/FUNCTIONS.h:578:6:void https_setup()	5
E:/repositories 2/LIBRARY/CUSTOM/FUNCTIONS.h:595:8:std::string https_req(std::string, uint16_t)	4
E:/repositories 2/LIBRARY/CUSTOM/FUNCTIONS.h:612:6:void neoway_flash_clean()	2
E:\Programs\STM32CubeIDE_1.14.1\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.11.3.rel1.win32_1.1.100.202309141235\tools\arm-none-eabi\include\c++\11.3.1\initializer_list:75:7:constexpr const _E* std::initializer_list<_E>::begin() const [with _E = unsigned char]	1
E:/repositories 2/LIBRARY/CUSTOM/FUNCTIONS.h:624:6:void print_time(std::string, std::initializer_list<unsigned char>)	1
E:/repositories 2/LIBRARY/CUSTOM/FUNCTIONS.h:631:6:void Print_save_time()	1
E:/repositories 2/LIBRARY/CUSTOM/FUNCTIONS.h:644:6:void Get_save_time()	7
E:/repositories 2/LIBRARY/CUSTOM/FUNCTIONS.h:731:6:void Set_RTC_ALARM(RTC_TimeTypeDef&, uint32_t)	2
E:/repositories 2/LIBRARY/CUSTOM/FUNCTIONS.h:755:6:void Set_RTC_TIME(std::string)	3
E:/repositories 2/LIBRARY/CUSTOM/FUNCTIONS.h:794:6:void httpget(const string&)	4
E:/repositories 2/LIBRARY/CUSTOM/FUNCTIONS.h:809:6:void get_file_name(const string&, std::string&)	2
E:/repositories 2/LIBRARY/CUSTOM/FUNCTIONS.h:824:6:void https_file_download(std::string&)	1
E:/repositories 2/LIBRARY/CUSTOM/FUNCTIONS.h:835:6:void neoway_publish(std::string)	3
E:/repositories 2/LIBRARY/CUSTOM/FUNCTIONS.h:1012:6:void object_setup()	1
E:/repositories 2/LIBRARY/CUSTOM/FUNCTIONS.h:1260:6:void HAL_RTC_AlarmAEventCallback(RTC_HandleTypeDef*)	1
E:/repositories 2/LIBRARY/CUSTOM/FUNCTIONS.h:1277:6:void HAL_RTCEx_AlarmBEventCallback(RTC_HandleTypeDef*)	1
E:/repositories 2/LIBRARY/CUSTOM/FUNCTIONS.h:1289:6:void HAL_RTCEx_WakeUpTimerEventCallback(RTC_HandleTypeDef*)	5
E:/repositories 2/LIBRARY/CUSTOM/FUNCTIONS.h:1317:17:RTC_TimeTypeDef ADD_seconds(RTC_TimeTypeDef&, RTC_DateTypeDef&, uint32_t)	6
E:/repositories 2/LIBRARY/CUSTOM/FUNCTIONS.h:1379:6:void SET_WAKEUP_INTERVAL(uint32_t)	2
E:/repositories 2/LIBRARY/CUSTOM/FUNCTIONS.h:1410:6:bool check_no_rtc()	2
E:/repositories 2/LIBRARY/CUSTOM/FUNCTIONS.h:1427:10:uint32_t get_file_size(std::string&)	6
E:/repositories 2/LIBRARY/CUSTOM/FUNCTIONS.h:1455:6:bool check_cont_flags()	3
E:/repositories 2/LIBRARY/CUSTOM/FUNCTIONS.h:1468:6:void ota_break(bool, std::string)	2
E:/repositories 2/LIBRARY/CUSTOM/FUNCTIONS.h:1485:6:void ota_proc(std::string&, uint32_t)	8
E:/repositories 2/LIBRARY/CUSTOM/FUNCTIONS.h:1533:6:void neoway_delete_file(std::string&)	4
E:/repositories 2/LIBRARY/CUSTOM/FUNCTIONS.h:1545:6:void update_ota_cont()	2
E:/repositories 2/LIBRARY/CUSTOM/FUNCTIONS.h:1561:6:void OTA_FUNCTION()	22
E:/repositories 2/LIBRARY/CUSTOM/FUNCTIONS.h:1655:9:uint8_t if_in_range(std::string&, uint32_t)	2
E:/repositories 2/LIBRARY/CUSTOM/FUNCTIONS.h:1670:10:uint64_t str_to_64(std::string&, uint32_t)	2
E:/repositories 2/LIBRARY/CUSTOM/FUNCTIONS.h:1689:6:void FLASH_ERASE2(uint32_t, uint32_t)	1
E:/repositories 2/LIBRARY/CUSTOM/FUNCTIONS.h:1718:26:HAL_StatusTypeDef write_data_to_flash_app(std::string&, bool)	8
E:/repositories 2/LIBRARY/CUSTOM/FUNCTIONS.h:1767:6:void STOPPER(std::string, std::string)	1
E:/repositories 2/LIBRARY/CUSTOM/FUNCTIONS.h:1774:6:void STOPPER_1(std::string)	2
E:/repositories 2/LIBRARY/CUSTOM/FUNCTIONS.h:1832:6:void ALL_POWER_OFF()	1
E:/repositories 2/LIBRARY/CUSTOM/FUNCTIONS.h:1839:6:void ALL_POWER_ON()	1
E:/repositories 2/LIBRARY/CUSTOM/FUNCTIONS.h:1849:6:void GO_TO_SLEEP()	8
../Core/Src/main.cpp:139:5:int main()	4
../Core/Src/main.cpp:253:6:void SystemClock_Config()	4
../Core/Src/main.cpp:300:6:void Error_Handler()	1
E:\Programs\STM32CubeIDE_1.14.1\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.11.3.rel1.win32_1.1.100.202309141235\tools\arm-none-eabi\include\c++\11.3.1\bits\charconv.h:47:5:constexpr unsigned int std::__detail::__to_chars_len(_Tp, int) [with _Tp = unsigned int]	5
E:\Programs\STM32CubeIDE_1.14.1\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.11.3.rel1.win32_1.1.100.202309141235\tools\arm-none-eabi\include\c++\11.3.1\bits\charconv.h:72:5:void std::__detail::__to_chars_10_impl(char*, unsigned int, _Tp) [with _Tp = unsigned int]	3
E:\Programs\STM32CubeIDE_1.14.1\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.11.3.rel1.win32_1.1.100.202309141235\tools\arm-none-eabi\include\c++\11.3.1\bits\charconv.h:47:5:constexpr unsigned int std::__detail::__to_chars_len(_Tp, int) [with _Tp = long unsigned int]	5
E:\Programs\STM32CubeIDE_1.14.1\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.11.3.rel1.win32_1.1.100.202309141235\tools\arm-none-eabi\include\c++\11.3.1\bits\charconv.h:72:5:void std::__detail::__to_chars_10_impl(char*, unsigned int, _Tp) [with _Tp = long unsigned int]	3
E:\Programs\STM32CubeIDE_1.14.1\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.11.3.rel1.win32_1.1.100.202309141235\tools\arm-none-eabi\include\c++\11.3.1\bits\charconv.h:47:5:constexpr unsigned int std::__detail::__to_chars_len(_Tp, int) [with _Tp = long long unsigned int]	5
E:\Programs\STM32CubeIDE_1.14.1\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.11.3.rel1.win32_1.1.100.202309141235\tools\arm-none-eabi\include\c++\11.3.1\bits\charconv.h:72:5:void std::__detail::__to_chars_10_impl(char*, unsigned int, _Tp) [with _Tp = long long unsigned int]	3
E:\Programs\STM32CubeIDE_1.14.1\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.11.3.rel1.win32_1.1.100.202309141235\tools\arm-none-eabi\include\c++\11.3.1\bits\basic_string.tcc:1189:5:std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(_CharT, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]	1
E:\Programs\STM32CubeIDE_1.14.1\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.11.3.rel1.win32_1.1.100.202309141235\tools\arm-none-eabi\include\c++\11.3.1\bits\basic_string.tcc:1169:5:std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(const _CharT*, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]	1
E:\Programs\STM32CubeIDE_1.14.1\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.11.3.rel1.win32_1.1.100.202309141235\tools\arm-none-eabi\include\c++\11.3.1\bits\stl_iterator.h:1178:5:bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = const char*; _Container = std::__cxx11::basic_string<char>]	1
E:\Programs\STM32CubeIDE_1.14.1\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.11.3.rel1.win32_1.1.100.202309141235\tools\arm-none-eabi\include\c++\11.3.1\bits\stl_iterator.h:1051:7:__gnu_cxx::__normal_iterator<_Iterator, _Container>& __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator++() [with _Iterator = const char*; _Container = std::__cxx11::basic_string<char>]	1
E:\Programs\STM32CubeIDE_1.14.1\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.11.3.rel1.win32_1.1.100.202309141235\tools\arm-none-eabi\include\c++\11.3.1\bits\stl_iterator.h:1041:7:__gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = const char*; _Container = std::__cxx11::basic_string<char>]	1
E:\Programs\STM32CubeIDE_1.14.1\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.11.3.rel1.win32_1.1.100.202309141235\tools\arm-none-eabi\include\c++\11.3.1\bits\basic_string.h:6132:5:std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]	1
E:\Programs\STM32CubeIDE_1.14.1\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.11.3.rel1.win32_1.1.100.202309141235\tools\arm-none-eabi\include\c++\11.3.1\bits\basic_string.h:6172:5:std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]	7
E:\Programs\STM32CubeIDE_1.14.1\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.11.3.rel1.win32_1.1.100.202309141235\tools\arm-none-eabi\include\c++\11.3.1\bits\basic_string.h:6194:5:std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Memory/MemoryPool.hpp:205:6:T* ArduinoJson::V6211HB::detail::MemoryPool::allocRight() [with T = ArduinoJson::V6211HB::detail::VariantSlot]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Memory/../Strings/../Strings/Adapters/../../Strings/Adapters/../../Strings/StringAdapter.hpp:26:52:typename ArduinoJson::V6211HB::detail::SizedStringAdapter<TChar*>::AdaptedString ArduinoJson::V6211HB::detail::adaptString(TChar*, size_t) [with TChar = char]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Memory/MemoryPool.hpp:179:15:const char* ArduinoJson::V6211HB::detail::MemoryPool::findString(const TAdaptedString&) const [with TAdaptedString = ArduinoJson::V6211HB::detail::SizedRamString]	6
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/VariantOperators.hpp:90:15:bool ArduinoJson::V6211HB::detail::operator!=(const T&, TVariant) [with T = ArduinoJson::V6211HB::JsonVariantConst; TVariant = ArduinoJson::V6211HB::JsonVariantConst]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Memory/../Strings/../Strings/Adapters/../../Strings/Adapters/../../Strings/StringAdapter.hpp:16:48:typename ArduinoJson::V6211HB::detail::StringAdapter<TString>::AdaptedString ArduinoJson::V6211HB::detail::adaptString(const TString&) [with TString = ArduinoJson::V6211HB::JsonString]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Memory/../Strings/../Strings/Adapters/../../Strings/Adapters/../../Strings/StringAdapter.hpp:21:47:typename ArduinoJson::V6211HB::detail::StringAdapter<TChar*>::AdaptedString ArduinoJson::V6211HB::detail::adaptString(TChar*) [with TChar = const char]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/../Json/JsonSerializer.hpp:125:8:size_t ArduinoJson::V6211HB::serializeJson(ArduinoJson::V6211HB::JsonVariantConst, TDestination&) [with TDestination = std::__cxx11::basic_string<char>]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/VariantCompare.hpp:180:17:ArduinoJson::V6211HB::detail::CompareResult ArduinoJson::V6211HB::detail::VariantComparer::accept(TComparer&) [with TComparer = ArduinoJson::V6211HB::detail::ArrayComparer]	3
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/VariantCompare.hpp:180:17:ArduinoJson::V6211HB::detail::CompareResult ArduinoJson::V6211HB::detail::VariantComparer::accept(TComparer&) [with TComparer = ArduinoJson::V6211HB::detail::ObjectComparer]	3
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/VariantCompare.hpp:53:12:ArduinoJson::V6211HB::detail::Comparer<T, typename ArduinoJson::V6211HB::detail::enable_if<(ArduinoJson::V6211HB::detail::is_integral<T>::value || ArduinoJson::V6211HB::detail::is_floating_point<T>::value)>::type>::Comparer(T) [with T = double]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/VariantCompare.hpp:180:17:ArduinoJson::V6211HB::detail::CompareResult ArduinoJson::V6211HB::detail::VariantComparer::accept(TComparer&) [with TComparer = ArduinoJson::V6211HB::detail::Comparer<double>]	3
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/VariantCompare.hpp:27:12:ArduinoJson::V6211HB::detail::Comparer<T, typename ArduinoJson::V6211HB::detail::enable_if<ArduinoJson::V6211HB::detail::IsString<TString>::value, void>::type>::Comparer(T) [with T = const char*]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/VariantCompare.hpp:180:17:ArduinoJson::V6211HB::detail::CompareResult ArduinoJson::V6211HB::detail::VariantComparer::accept(TComparer&) [with TComparer = ArduinoJson::V6211HB::detail::Comparer<const char*>]	3
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/VariantCompare.hpp:180:17:ArduinoJson::V6211HB::detail::CompareResult ArduinoJson::V6211HB::detail::VariantComparer::accept(TComparer&) [with TComparer = ArduinoJson::V6211HB::detail::RawComparer]	3
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/VariantCompare.hpp:53:12:ArduinoJson::V6211HB::detail::Comparer<T, typename ArduinoJson::V6211HB::detail::enable_if<(ArduinoJson::V6211HB::detail::is_integral<T>::value || ArduinoJson::V6211HB::detail::is_floating_point<T>::value)>::type>::Comparer(T) [with T = long long int]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/VariantCompare.hpp:180:17:ArduinoJson::V6211HB::detail::CompareResult ArduinoJson::V6211HB::detail::VariantComparer::accept(TComparer&) [with TComparer = ArduinoJson::V6211HB::detail::Comparer<long long int>]	3
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/VariantCompare.hpp:53:12:ArduinoJson::V6211HB::detail::Comparer<T, typename ArduinoJson::V6211HB::detail::enable_if<(ArduinoJson::V6211HB::detail::is_integral<T>::value || ArduinoJson::V6211HB::detail::is_floating_point<T>::value)>::type>::Comparer(T) [with T = long long unsigned int]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/VariantCompare.hpp:180:17:ArduinoJson::V6211HB::detail::CompareResult ArduinoJson::V6211HB::detail::VariantComparer::accept(TComparer&) [with TComparer = ArduinoJson::V6211HB::detail::Comparer<long long unsigned int>]	3
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/VariantCompare.hpp:53:12:ArduinoJson::V6211HB::detail::Comparer<T, typename ArduinoJson::V6211HB::detail::enable_if<(ArduinoJson::V6211HB::detail::is_integral<T>::value || ArduinoJson::V6211HB::detail::is_floating_point<T>::value)>::type>::Comparer(T) [with T = bool]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/VariantCompare.hpp:180:17:ArduinoJson::V6211HB::detail::CompareResult ArduinoJson::V6211HB::detail::VariantComparer::accept(TComparer&) [with TComparer = ArduinoJson::V6211HB::detail::Comparer<bool>]	3
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/VariantCompare.hpp:180:17:ArduinoJson::V6211HB::detail::CompareResult ArduinoJson::V6211HB::detail::VariantComparer::accept(TComparer&) [with TComparer = ArduinoJson::V6211HB::detail::NullComparer]	3
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/../Variant/VariantData.hpp:194:49:typename ArduinoJson::V6211HB::detail::enable_if<ArduinoJson::V6211HB::detail::is_signed<T>::value>::type ArduinoJson::V6211HB::detail::VariantData::setInteger(T) [with T = long long int]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/../Variant/VariantData.hpp:188:51:typename ArduinoJson::V6211HB::detail::enable_if<ArduinoJson::V6211HB::detail::is_unsigned<T>::value>::type ArduinoJson::V6211HB::detail::VariantData::setInteger(T) [with T = long long unsigned int]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/../Variant/../Numbers/../Numbers/FloatTraits.hpp:70:12:static T ArduinoJson::V6211HB::detail::FloatTraits<T, 8>::inf() [with T = double]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/../Variant/../Numbers/../Numbers/FloatTraits.hpp:196:15:TFloat ArduinoJson::V6211HB::detail::make_float(TFloat, TExponent) [with TFloat = double; TExponent = int]	5
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/DYNAMIC_ARRAY.h:38:3:DynamicArray<Tda>::DynamicArray() [with Tda = Parameter]	3
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/DYNAMIC_ARRAY.h:55:3:DynamicArray<Tda>::~DynamicArray() [with Tda = Parameter]	1
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/DYNAMIC_ARRAY.h:90:8:void DynamicArray<Tda>::push_back(Tda) [with Tda = VARIABLES*]	1
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/DYNAMIC_ARRAY.h:80:12:uint32_t DynamicArray<Tda>::size() [with Tda = Parameter]	1
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/DYNAMIC_ARRAY.h:173:8:Tda* DynamicArray<Tda>::at(uint32_t) [with Tda = Parameter]	2
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/DYNAMIC_ARRAY.h:38:3:DynamicArray<Tda>::DynamicArray() [with Tda = VARIABLES*]	2
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/DYNAMIC_ARRAY.h:38:3:DynamicArray<Tda>::DynamicArray() [with Tda = bool]	1
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/DYNAMIC_ARRAY.h:90:8:void DynamicArray<Tda>::push_back(Tda) [with Tda = bool]	1
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/DYNAMIC_ARRAY.h:104:7:Tda DynamicArray<Tda>::pop_back() [with Tda = bool]	2
E:\Programs\STM32CubeIDE_1.14.1\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.11.3.rel1.win32_1.1.100.202309141235\tools\arm-none-eabi\include\c++\11.3.1\bits\basic_string.h:6206:5:std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]	1
E:\Programs\STM32CubeIDE_1.14.1\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.11.3.rel1.win32_1.1.100.202309141235\tools\arm-none-eabi\include\c++\11.3.1\initializer_list:75:7:constexpr const _E* std::initializer_list<_E>::begin() const [with _E = long unsigned int]	1
E:\Programs\STM32CubeIDE_1.14.1\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.11.3.rel1.win32_1.1.100.202309141235\tools\arm-none-eabi\include\c++\11.3.1\initializer_list:75:7:constexpr const _E* std::initializer_list<_E>::begin() const [with _E = std::__cxx11::basic_string<char>]	1
E:\Programs\STM32CubeIDE_1.14.1\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.11.3.rel1.win32_1.1.100.202309141235\tools\arm-none-eabi\include\c++\11.3.1\bits\basic_string.h:6095:5:std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]	1
E:\Programs\STM32CubeIDE_1.14.1\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.11.3.rel1.win32_1.1.100.202309141235\tools\arm-none-eabi\include\c++\11.3.1\bits\basic_string.h:6248:5:bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]	1
E:\Programs\STM32CubeIDE_1.14.1\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.11.3.rel1.win32_1.1.100.202309141235\tools\arm-none-eabi\include\c++\11.3.1\bits\basic_string.h:6234:5:typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type std::operator==(const std::__cxx11::basic_string<_CharT>&, const std::__cxx11::basic_string<_CharT>&) [with _CharT = char]	3
E:\Programs\STM32CubeIDE_1.14.1\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.11.3.rel1.win32_1.1.100.202309141235\tools\arm-none-eabi\include\c++\11.3.1\bits\basic_string.h:6327:5:bool std::operator!=(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Document/StaticJsonDocument.hpp:18:3:ArduinoJson::V6211HB::StaticJsonDocument<desiredCapacity>::StaticJsonDocument() [with unsigned int desiredCapacity = 1024]	1
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/DYNAMIC_ARRAY.h:80:12:uint32_t DynamicArray<Tda>::size() [with Tda = VARIABLES*]	1
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/DYNAMIC_ARRAY.h:173:8:Tda* DynamicArray<Tda>::at(uint32_t) [with Tda = VARIABLES*]	2
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/VariantOperators.hpp:68:15:bool ArduinoJson::V6211HB::detail::operator==(const T&, TVariant) [with T = ArduinoJson::V6211HB::StaticJsonDocument<1024>; TVariant = const ArduinoJson::V6211HB::JsonDocument&]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Json/JsonDeserializer.hpp:678:22:) [with Args = {std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&}]	1
E:\Programs\STM32CubeIDE_1.14.1\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.11.3.rel1.win32_1.1.100.202309141235\tools\arm-none-eabi\include\c++\11.3.1\bits\basic_string.h:6160:5:std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Document/../Document/../Document/JsonDocument.hpp:170:8:bool ArduinoJson::V6211HB::JsonDocument::containsKey(const TString&) const [with TString = std::__cxx11::basic_string<char>]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Document/../Document/../Document/JsonDocument.hpp:163:8:bool ArduinoJson::V6211HB::JsonDocument::containsKey(TChar*) const [with TChar = const char]	1
E:\Programs\STM32CubeIDE_1.14.1\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.11.3.rel1.win32_1.1.100.202309141235\tools\arm-none-eabi\include\c++\11.3.1\ext\alloc_traits.h:97:29:static constexpr _Alloc __gnu_cxx::__alloc_traits<_Alloc, <template-parameter-1-2> >::_S_select_on_copy(const _Alloc&) [with _Alloc = std::allocator<char>; <template-parameter-1-2> = char]	1
E:\Programs\STM32CubeIDE_1.14.1\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.11.3.rel1.win32_1.1.100.202309141235\tools\arm-none-eabi\include\c++\11.3.1\bits\allocator.h:204:7:bool std::operator==(const std::allocator<char>&, const std::allocator<char>&)	1
E:\Programs\STM32CubeIDE_1.14.1\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.11.3.rel1.win32_1.1.100.202309141235\tools\arm-none-eabi\include\c++\11.3.1\bits\stl_iterator.h:1026:7:__gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = const char*; _Container = std::__cxx11::basic_string<char>]	1
E:\Programs\STM32CubeIDE_1.14.1\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.11.3.rel1.win32_1.1.100.202309141235\tools\arm-none-eabi\include\c++\11.3.1\bits\stl_iterator.h:1104:7:const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = const char*; _Container = std::__cxx11::basic_string<char>]	1
E:\Programs\STM32CubeIDE_1.14.1\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.11.3.rel1.win32_1.1.100.202309141235\tools\bin/../lib/gcc/arm-none-eabi/11.3.1/../../../../arm-none-eabi/include/c++/11.3.1/bits/move.h:104:5:constexpr typename std::remove_reference<_Tp>::type&& std::move(_Tp&&) [with _Tp = std::__cxx11::basic_string<char>&]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Memory/../Strings/../Strings/Adapters/../../Strings/Adapters/RamString.hpp:138:24:static ArduinoJson::V6211HB::detail::SizedStringAdapter<TChar*, typename ArduinoJson::V6211HB::detail::enable_if<ArduinoJson::V6211HB::detail::IsChar<T>::value>::type>::AdaptedString ArduinoJson::V6211HB::detail::SizedStringAdapter<TChar*, typename ArduinoJson::V6211HB::detail::enable_if<ArduinoJson::V6211HB::detail::IsChar<T>::value>::type>::adapt(const TChar*, size_t) [with TChar = char]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Memory/../Strings/StringAdapters.hpp:48:1:typename ArduinoJson::V6211HB::detail::enable_if<(TAdaptedString1::typeSortKey <= TAdaptedString2::typeSortKey), bool>::type ArduinoJson::V6211HB::detail::stringEquals(TAdaptedString1, TAdaptedString2) [with TAdaptedString1 = ArduinoJson::V6211HB::detail::SizedRamString; TAdaptedString2 = ArduinoJson::V6211HB::detail::SizedRamString]	4
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/VariantCompare.hpp:202:15:ArduinoJson::V6211HB::detail::CompareResult ArduinoJson::V6211HB::detail::compare(ArduinoJson::V6211HB::JsonVariantConst, const T&) [with T = ArduinoJson::V6211HB::JsonVariantConst]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Object/../Object/JsonObjectConst.hpp:130:30:const ArduinoJson::V6211HB::detail::VariantData* ArduinoJson::V6211HB::JsonObjectConst::getMember(TAdaptedString) const [with TAdaptedString = ArduinoJson::V6211HB::detail::JsonStringAdapter]	2
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/../Json/../Serialization/serialize.hpp:19:8:size_t ArduinoJson::V6211HB::detail::serialize(ArduinoJson::V6211HB::JsonVariantConst, TDestination&) [with TSerializer = ArduinoJson::V6211HB::detail::JsonSerializer; TDestination = std::__cxx11::basic_string<char>]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/VariantFunctions.hpp:15:39:typename TVisitor::result_type ArduinoJson::V6211HB::detail::variantAccept(const ArduinoJson::V6211HB::detail::VariantData*, TVisitor&) [with TVisitor = ArduinoJson::V6211HB::detail::ArrayComparer]	2
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/VariantFunctions.hpp:15:39:typename TVisitor::result_type ArduinoJson::V6211HB::detail::variantAccept(const ArduinoJson::V6211HB::detail::VariantData*, TVisitor&) [with TVisitor = ArduinoJson::V6211HB::detail::ObjectComparer]	2
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/VariantFunctions.hpp:15:39:typename TVisitor::result_type ArduinoJson::V6211HB::detail::variantAccept(const ArduinoJson::V6211HB::detail::VariantData*, TVisitor&) [with TVisitor = ArduinoJson::V6211HB::detail::Comparer<double>]	2
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/VariantFunctions.hpp:15:39:typename TVisitor::result_type ArduinoJson::V6211HB::detail::variantAccept(const ArduinoJson::V6211HB::detail::VariantData*, TVisitor&) [with TVisitor = ArduinoJson::V6211HB::detail::Comparer<const char*>]	2
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/VariantFunctions.hpp:15:39:typename TVisitor::result_type ArduinoJson::V6211HB::detail::variantAccept(const ArduinoJson::V6211HB::detail::VariantData*, TVisitor&) [with TVisitor = ArduinoJson::V6211HB::detail::RawComparer]	2
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/VariantFunctions.hpp:15:39:typename TVisitor::result_type ArduinoJson::V6211HB::detail::variantAccept(const ArduinoJson::V6211HB::detail::VariantData*, TVisitor&) [with TVisitor = ArduinoJson::V6211HB::detail::Comparer<long long int>]	2
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/VariantFunctions.hpp:15:39:typename TVisitor::result_type ArduinoJson::V6211HB::detail::variantAccept(const ArduinoJson::V6211HB::detail::VariantData*, TVisitor&) [with TVisitor = ArduinoJson::V6211HB::detail::Comparer<long long unsigned int>]	2
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/VariantFunctions.hpp:15:39:typename TVisitor::result_type ArduinoJson::V6211HB::detail::variantAccept(const ArduinoJson::V6211HB::detail::VariantData*, TVisitor&) [with TVisitor = ArduinoJson::V6211HB::detail::Comparer<bool>]	2
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/VariantFunctions.hpp:15:39:typename TVisitor::result_type ArduinoJson::V6211HB::detail::variantAccept(const ArduinoJson::V6211HB::detail::VariantData*, TVisitor&) [with TVisitor = ArduinoJson::V6211HB::detail::NullComparer]	2
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/../Variant/../Numbers/../Numbers/FloatTraits.hpp:101:12:static T ArduinoJson::V6211HB::detail::FloatTraits<T, 8>::forge(uint64_t) [with T = double]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/../Variant/../Numbers/../Numbers/FloatTraits.hpp:32:21:static ArduinoJson::V6211HB::detail::pgm_ptr<T> ArduinoJson::V6211HB::detail::FloatTraits<T, 8>::positiveBinaryPowersOfTen() [with T = double]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/../Variant/../Numbers/../Numbers/FloatTraits.hpp:49:21:static ArduinoJson::V6211HB::detail::pgm_ptr<T> ArduinoJson::V6211HB::detail::FloatTraits<T, 8>::negativeBinaryPowersOfTen() [with T = double]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/../Variant/../Numbers/../Numbers/../Polyfills/pgmspace_generic.hpp:59:5:T ArduinoJson::V6211HB::detail::pgm_ptr<T>::operator[](intptr_t) const [with T = double]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Memory/../Strings/../Strings/Adapters/../../Strings/Adapters/../../Strings/StringAdapter.hpp:26:52:typename ArduinoJson::V6211HB::detail::SizedStringAdapter<TChar*>::AdaptedString ArduinoJson::V6211HB::detail::adaptString(TChar*, size_t) [with TChar = const char]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Memory/MemoryPool.hpp:73:15:const char* ArduinoJson::V6211HB::detail::MemoryPool::saveString(TAdaptedString) [with TAdaptedString = ArduinoJson::V6211HB::detail::SizedRamString]	4
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/DYNAMIC_ARRAY.h:153:8:void DynamicArray<Tda>::expand_1() [with Tda = VARIABLES*]	4
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/DYNAMIC_ARRAY.h:153:8:void DynamicArray<Tda>::expand_1() [with Tda = bool]	3
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/DYNAMIC_ARRAY.h:125:8:void DynamicArray<Tda>::contract_1() [with Tda = bool]	4
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/VariantCompare.hpp:202:15:ArduinoJson::V6211HB::detail::CompareResult ArduinoJson::V6211HB::detail::compare(ArduinoJson::V6211HB::JsonVariantConst, const T&) [with T = ArduinoJson::V6211HB::StaticJsonDocument<1024>]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Json/../Deserialization/../Deserialization/../Polyfills/utility.hpp:12:5:T&& ArduinoJson::V6211HB::detail::forward(typename ArduinoJson::V6211HB::detail::remove_reference<T>::type&) [with T = std::__cxx11::basic_string<char>&]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Json/../Deserialization/deserialize.hpp:39:22:) [with TDeserializer = ArduinoJson::V6211HB::detail::JsonDeserializer; TStream = std::__cxx11::basic_string<char>&; Args = {}; <template-parameter-1-4> = void]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Memory/../Strings/../Strings/Adapters/../../Strings/Adapters/../../Strings/StringAdapter.hpp:16:48:typename ArduinoJson::V6211HB::detail::StringAdapter<TString>::AdaptedString ArduinoJson::V6211HB::detail::adaptString(const TString&) [with TString = std::__cxx11::basic_string<char>]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/../Variant/VariantData.hpp:266:16:ArduinoJson::V6211HB::detail::VariantData* ArduinoJson::V6211HB::detail::VariantData::getMember(TAdaptedString) const [with TAdaptedString = ArduinoJson::V6211HB::detail::SizedRamString]	2
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/../Variant/VariantData.hpp:266:16:ArduinoJson::V6211HB::detail::VariantData* ArduinoJson::V6211HB::detail::VariantData::getMember(TAdaptedString) const [with TAdaptedString = ArduinoJson::V6211HB::detail::StaticStringAdapter]	2
E:\Programs\STM32CubeIDE_1.14.1\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.11.3.rel1.win32_1.1.100.202309141235\tools\arm-none-eabi\include\c++\11.3.1\bits\alloc_traits.h:562:7:static std::allocator_traits<std::allocator<_CharT> >::allocator_type std::allocator_traits<std::allocator<_CharT> >::select_on_container_copy_construction(const allocator_type&) [with _Tp = char]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/VariantCompare.hpp:197:12:ArduinoJson::V6211HB::detail::Comparer<T, typename ArduinoJson::V6211HB::detail::enable_if<ArduinoJson::V6211HB::detail::is_convertible<T, ArduinoJson::V6211HB::JsonVariantConst>::value>::type>::Comparer(const T&) [with T = ArduinoJson::V6211HB::JsonVariantConst]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/VariantFunctions.hpp:15:39:typename TVisitor::result_type ArduinoJson::V6211HB::detail::variantAccept(const ArduinoJson::V6211HB::detail::VariantData*, TVisitor&) [with TVisitor = ArduinoJson::V6211HB::detail::Comparer<ArduinoJson::V6211HB::JsonVariantConst, void>]	2
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Collection/CollectionImpl.hpp:108:21:ArduinoJson::V6211HB::detail::VariantData* ArduinoJson::V6211HB::detail::CollectionData::getMember(TAdaptedString) const [with TAdaptedString = ArduinoJson::V6211HB::detail::JsonStringAdapter]	2
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/../Json/../Serialization/../Serialization/../Serialization/Writers/StdStringWriter.hpp:27:3:ArduinoJson::V6211HB::detail::Writer<TDestination, typename ArduinoJson::V6211HB::detail::enable_if<ArduinoJson::V6211HB::detail::is_std_string<TDestination>::value>::type>::Writer(TDestination&) [with TDestination = std::__cxx11::basic_string<char>]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/../Json/../Serialization/serialize.hpp:13:8:size_t ArduinoJson::V6211HB::detail::doSerialize(ArduinoJson::V6211HB::JsonVariantConst, TWriter) [with TSerializer = ArduinoJson::V6211HB::detail::JsonSerializer; TWriter = ArduinoJson::V6211HB::detail::Writer<std::__cxx11::basic_string<char>, void>]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/../Variant/VariantData.hpp:29:34:typename TVisitor::result_type ArduinoJson::V6211HB::detail::VariantData::accept(TVisitor&) const [with TVisitor = ArduinoJson::V6211HB::detail::ArrayComparer]	9
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/../Variant/Visitor.hpp:33:11:TResult ArduinoJson::V6211HB::detail::Visitor<TResult>::visitNull() [with TResult = ArduinoJson::V6211HB::detail::CompareResult]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/../Variant/VariantData.hpp:29:34:typename TVisitor::result_type ArduinoJson::V6211HB::detail::VariantData::accept(TVisitor&) const [with TVisitor = ArduinoJson::V6211HB::detail::ObjectComparer]	9
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/../Variant/VariantData.hpp:29:34:typename TVisitor::result_type ArduinoJson::V6211HB::detail::VariantData::accept(TVisitor&) const [with TVisitor = ArduinoJson::V6211HB::detail::Comparer<double>]	9
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/../Variant/VariantData.hpp:29:34:typename TVisitor::result_type ArduinoJson::V6211HB::detail::VariantData::accept(TVisitor&) const [with TVisitor = ArduinoJson::V6211HB::detail::Comparer<const char*>]	9
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/VariantCompare.hpp:39:17:ArduinoJson::V6211HB::detail::CompareResult ArduinoJson::V6211HB::detail::Comparer<T, typename ArduinoJson::V6211HB::detail::enable_if<ArduinoJson::V6211HB::detail::IsString<TString>::value, void>::type>::visitNull() [with T = const char*]	2
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/../Variant/VariantData.hpp:29:34:typename TVisitor::result_type ArduinoJson::V6211HB::detail::VariantData::accept(TVisitor&) const [with TVisitor = ArduinoJson::V6211HB::detail::RawComparer]	9
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/../Variant/VariantData.hpp:29:34:typename TVisitor::result_type ArduinoJson::V6211HB::detail::VariantData::accept(TVisitor&) const [with TVisitor = ArduinoJson::V6211HB::detail::Comparer<long long int>]	9
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/../Variant/VariantData.hpp:29:34:typename TVisitor::result_type ArduinoJson::V6211HB::detail::VariantData::accept(TVisitor&) const [with TVisitor = ArduinoJson::V6211HB::detail::Comparer<long long unsigned int>]	9
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/../Variant/VariantData.hpp:29:34:typename TVisitor::result_type ArduinoJson::V6211HB::detail::VariantData::accept(TVisitor&) const [with TVisitor = ArduinoJson::V6211HB::detail::Comparer<bool>]	9
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/../Variant/VariantData.hpp:29:34:typename TVisitor::result_type ArduinoJson::V6211HB::detail::VariantData::accept(TVisitor&) const [with TVisitor = ArduinoJson::V6211HB::detail::NullComparer]	9
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/../Variant/../Numbers/../Numbers/../Polyfills/alias_cast.hpp:24:3:T ArduinoJson::V6211HB::detail::alias_cast(F) [with T = double; F = long long unsigned int]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/../Variant/../Numbers/../Numbers/../Polyfills/pgmspace_generic.hpp:57:12:ArduinoJson::V6211HB::detail::pgm_ptr<T>::pgm_ptr(const T*) [with T = double]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/../Variant/../Numbers/../Numbers/../Polyfills/pgmspace_generic.hpp:48:10:T ArduinoJson::V6211HB::detail::pgm_read(const T*) [with T = double]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Memory/../Strings/../Strings/Adapters/../../Strings/Adapters/RamString.hpp:138:24:static ArduinoJson::V6211HB::detail::SizedStringAdapter<TChar*, typename ArduinoJson::V6211HB::detail::enable_if<ArduinoJson::V6211HB::detail::IsChar<T>::value>::type>::AdaptedString ArduinoJson::V6211HB::detail::SizedStringAdapter<TChar*, typename ArduinoJson::V6211HB::detail::enable_if<ArduinoJson::V6211HB::detail::IsChar<T>::value>::type>::adapt(const TChar*, size_t) [with TChar = const char]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Memory/../Strings/StringAdapters.hpp:70:13:void ArduinoJson::V6211HB::detail::stringGetChars(TAdaptedString, char*, size_t) [with TAdaptedString = ArduinoJson::V6211HB::detail::SizedRamString]	2
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/ConverterImpl.hpp:15:15:static void ArduinoJson::V6211HB::Converter<T, Enable>::toJson(const T&, ArduinoJson::V6211HB::JsonVariant) [with T = std::__cxx11::basic_string<char>; Enable = void]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/ConverterImpl.hpp:103:15:static void ArduinoJson::V6211HB::Converter<T, typename ArduinoJson::V6211HB::detail::enable_if<ArduinoJson::V6211HB::detail::is_floating_point<T>::value>::type>::toJson(T, ArduinoJson::V6211HB::JsonVariant) [with T = double]	2
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/VariantCompare.hpp:197:12:ArduinoJson::V6211HB::detail::Comparer<T, typename ArduinoJson::V6211HB::detail::enable_if<ArduinoJson::V6211HB::detail::is_convertible<T, ArduinoJson::V6211HB::JsonVariantConst>::value>::type>::Comparer(const T&) [with T = ArduinoJson::V6211HB::StaticJsonDocument<1024>]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/VariantFunctions.hpp:15:39:typename TVisitor::result_type ArduinoJson::V6211HB::detail::variantAccept(const ArduinoJson::V6211HB::detail::VariantData*, TVisitor&) [with TVisitor = ArduinoJson::V6211HB::detail::Comparer<ArduinoJson::V6211HB::StaticJsonDocument<1024>, void>]	2
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Json/../Deserialization/../Deserialization/Reader.hpp:63:49:ArduinoJson::V6211HB::detail::Reader<typename ArduinoJson::V6211HB::detail::remove_reference<T>::type> ArduinoJson::V6211HB::detail::makeReader(TInput&&) [with TInput = std::__cxx11::basic_string<char>&]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Json/../Deserialization/../StringStorage/StringStorage.hpp:13:14:ArduinoJson::V6211HB::detail::StringCopier ArduinoJson::V6211HB::detail::makeStringStorage(TInput&, ArduinoJson::V6211HB::detail::MemoryPool*) [with TInput = std::__cxx11::basic_string<char>]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Json/../Deserialization/deserialize.hpp:28:33:TDeserializer<TReader, TWriter> ArduinoJson::V6211HB::detail::makeDeserializer(ArduinoJson::V6211HB::detail::MemoryPool*, TReader, TWriter) [with TDeserializer = ArduinoJson::V6211HB::detail::JsonDeserializer; TReader = ArduinoJson::V6211HB::detail::Reader<std::__cxx11::basic_string<char>, void>; TWriter = ArduinoJson::V6211HB::detail::StringCopier]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Json/JsonDeserializer.hpp:32:24:ArduinoJson::V6211HB::DeserializationError ArduinoJson::V6211HB::detail::JsonDeserializer<TReader, TStringStorage>::parse(ArduinoJson::V6211HB::detail::VariantData&, TFilter, ArduinoJson::V6211HB::DeserializationOption::NestingLimit) [with TFilter = ArduinoJson::V6211HB::detail::AllowAllFilter; TReader = ArduinoJson::V6211HB::detail::Reader<std::__cxx11::basic_string<char>, void>; TStringStorage = ArduinoJson::V6211HB::detail::StringCopier]	5
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Memory/../Strings/../Strings/Adapters/StringObject.hpp:21:24:static ArduinoJson::V6211HB::detail::StringAdapter<T, typename ArduinoJson::V6211HB::detail::enable_if<((ArduinoJson::V6211HB::detail::string_traits<T>::has_cstr || ArduinoJson::V6211HB::detail::string_traits<T>::has_data) && (ArduinoJson::V6211HB::detail::string_traits<T>::has_length || ArduinoJson::V6211HB::detail::string_traits<T>::has_size))>::type>::AdaptedString ArduinoJson::V6211HB::detail::StringAdapter<T, typename ArduinoJson::V6211HB::detail::enable_if<((ArduinoJson::V6211HB::detail::string_traits<T>::has_cstr || ArduinoJson::V6211HB::detail::string_traits<T>::has_data) && (ArduinoJson::V6211HB::detail::string_traits<T>::has_length || ArduinoJson::V6211HB::detail::string_traits<T>::has_size))>::type>::adapt(const T&) [with T = std::__cxx11::basic_string<char>]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Collection/CollectionImpl.hpp:108:21:ArduinoJson::V6211HB::detail::VariantData* ArduinoJson::V6211HB::detail::CollectionData::getMember(TAdaptedString) const [with TAdaptedString = ArduinoJson::V6211HB::detail::SizedRamString]	2
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/ConverterImpl.hpp:21:12:static T ArduinoJson::V6211HB::Converter<T, Enable>::fromJson(ArduinoJson::V6211HB::JsonVariantConst) [with T = std::__cxx11::basic_string<char>; Enable = void]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Collection/CollectionImpl.hpp:108:21:ArduinoJson::V6211HB::detail::VariantData* ArduinoJson::V6211HB::detail::CollectionData::getMember(TAdaptedString) const [with TAdaptedString = ArduinoJson::V6211HB::detail::StaticStringAdapter]	2
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/../Variant/VariantData.hpp:29:34:typename TVisitor::result_type ArduinoJson::V6211HB::detail::VariantData::accept(TVisitor&) const [with TVisitor = ArduinoJson::V6211HB::detail::Comparer<ArduinoJson::V6211HB::JsonVariantConst, void>]	9
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Collection/CollectionImpl.hpp:78:21:ArduinoJson::V6211HB::detail::VariantSlot* ArduinoJson::V6211HB::detail::CollectionData::getSlot(TAdaptedString) const [with TAdaptedString = ArduinoJson::V6211HB::detail::JsonStringAdapter]	4
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/../Json/JsonSerializer.hpp:19:3:ArduinoJson::V6211HB::detail::JsonSerializer<TWriter>::JsonSerializer(TWriter) [with TWriter = ArduinoJson::V6211HB::detail::Writer<std::__cxx11::basic_string<char>, void>]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/VariantFunctions.hpp:15:39:typename TVisitor::result_type ArduinoJson::V6211HB::detail::variantAccept(const ArduinoJson::V6211HB::detail::VariantData*, TVisitor&) [with TVisitor = ArduinoJson::V6211HB::detail::JsonSerializer<ArduinoJson::V6211HB::detail::Writer<std::__cxx11::basic_string<char>, void> >]	2
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/../Variant/Visitor.hpp:25:11:TResult ArduinoJson::V6211HB::detail::Visitor<TResult>::visitFloat(ArduinoJson::V6211HB::JsonFloat) [with TResult = ArduinoJson::V6211HB::detail::CompareResult]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/../Variant/Visitor.hpp:37:11:TResult ArduinoJson::V6211HB::detail::Visitor<TResult>::visitObject(const ArduinoJson::V6211HB::detail::CollectionData&) [with TResult = ArduinoJson::V6211HB::detail::CompareResult]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/../Variant/Visitor.hpp:49:11:TResult ArduinoJson::V6211HB::detail::Visitor<TResult>::visitString(const char*, size_t) [with TResult = ArduinoJson::V6211HB::detail::CompareResult]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/../Variant/Visitor.hpp:45:11:TResult ArduinoJson::V6211HB::detail::Visitor<TResult>::visitRawJson(const char*, size_t) [with TResult = ArduinoJson::V6211HB::detail::CompareResult]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/../Variant/Visitor.hpp:29:11:TResult ArduinoJson::V6211HB::detail::Visitor<TResult>::visitSignedInteger(ArduinoJson::V6211HB::JsonInteger) [with TResult = ArduinoJson::V6211HB::detail::CompareResult]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/../Variant/Visitor.hpp:41:11:TResult ArduinoJson::V6211HB::detail::Visitor<TResult>::visitUnsignedInteger(ArduinoJson::V6211HB::JsonUInt) [with TResult = ArduinoJson::V6211HB::detail::CompareResult]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/../Variant/Visitor.hpp:21:11:TResult ArduinoJson::V6211HB::detail::Visitor<TResult>::visitBoolean(bool) [with TResult = ArduinoJson::V6211HB::detail::CompareResult]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/../Variant/Visitor.hpp:17:11:TResult ArduinoJson::V6211HB::detail::Visitor<TResult>::visitArray(const ArduinoJson::V6211HB::detail::CollectionData&) [with TResult = ArduinoJson::V6211HB::detail::CompareResult]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/VariantCompare.hpp:55:17:ArduinoJson::V6211HB::detail::CompareResult ArduinoJson::V6211HB::detail::Comparer<T, typename ArduinoJson::V6211HB::detail::enable_if<(ArduinoJson::V6211HB::detail::is_integral<T>::value || ArduinoJson::V6211HB::detail::is_floating_point<T>::value)>::type>::visitFloat(ArduinoJson::V6211HB::JsonFloat) [with T = double]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/VariantCompare.hpp:59:17:ArduinoJson::V6211HB::detail::CompareResult ArduinoJson::V6211HB::detail::Comparer<T, typename ArduinoJson::V6211HB::detail::enable_if<(ArduinoJson::V6211HB::detail::is_integral<T>::value || ArduinoJson::V6211HB::detail::is_floating_point<T>::value)>::type>::visitSignedInteger(ArduinoJson::V6211HB::JsonInteger) [with T = double]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/VariantCompare.hpp:63:17:ArduinoJson::V6211HB::detail::CompareResult ArduinoJson::V6211HB::detail::Comparer<T, typename ArduinoJson::V6211HB::detail::enable_if<(ArduinoJson::V6211HB::detail::is_integral<T>::value || ArduinoJson::V6211HB::detail::is_floating_point<T>::value)>::type>::visitUnsignedInteger(ArduinoJson::V6211HB::JsonUInt) [with T = double]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/VariantCompare.hpp:67:17:ArduinoJson::V6211HB::detail::CompareResult ArduinoJson::V6211HB::detail::Comparer<T, typename ArduinoJson::V6211HB::detail::enable_if<(ArduinoJson::V6211HB::detail::is_integral<T>::value || ArduinoJson::V6211HB::detail::is_floating_point<T>::value)>::type>::visitBoolean(bool) [with T = double]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/VariantCompare.hpp:29:17:ArduinoJson::V6211HB::detail::CompareResult ArduinoJson::V6211HB::detail::Comparer<T, typename ArduinoJson::V6211HB::detail::enable_if<ArduinoJson::V6211HB::detail::IsString<TString>::value, void>::type>::visitString(const char*, size_t) [with T = const char*]	3
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/VariantCompare.hpp:55:17:ArduinoJson::V6211HB::detail::CompareResult ArduinoJson::V6211HB::detail::Comparer<T, typename ArduinoJson::V6211HB::detail::enable_if<(ArduinoJson::V6211HB::detail::is_integral<T>::value || ArduinoJson::V6211HB::detail::is_floating_point<T>::value)>::type>::visitFloat(ArduinoJson::V6211HB::JsonFloat) [with T = long long int]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/VariantCompare.hpp:59:17:ArduinoJson::V6211HB::detail::CompareResult ArduinoJson::V6211HB::detail::Comparer<T, typename ArduinoJson::V6211HB::detail::enable_if<(ArduinoJson::V6211HB::detail::is_integral<T>::value || ArduinoJson::V6211HB::detail::is_floating_point<T>::value)>::type>::visitSignedInteger(ArduinoJson::V6211HB::JsonInteger) [with T = long long int]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/VariantCompare.hpp:63:17:ArduinoJson::V6211HB::detail::CompareResult ArduinoJson::V6211HB::detail::Comparer<T, typename ArduinoJson::V6211HB::detail::enable_if<(ArduinoJson::V6211HB::detail::is_integral<T>::value || ArduinoJson::V6211HB::detail::is_floating_point<T>::value)>::type>::visitUnsignedInteger(ArduinoJson::V6211HB::JsonUInt) [with T = long long int]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/VariantCompare.hpp:67:17:ArduinoJson::V6211HB::detail::CompareResult ArduinoJson::V6211HB::detail::Comparer<T, typename ArduinoJson::V6211HB::detail::enable_if<(ArduinoJson::V6211HB::detail::is_integral<T>::value || ArduinoJson::V6211HB::detail::is_floating_point<T>::value)>::type>::visitBoolean(bool) [with T = long long int]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/VariantCompare.hpp:55:17:ArduinoJson::V6211HB::detail::CompareResult ArduinoJson::V6211HB::detail::Comparer<T, typename ArduinoJson::V6211HB::detail::enable_if<(ArduinoJson::V6211HB::detail::is_integral<T>::value || ArduinoJson::V6211HB::detail::is_floating_point<T>::value)>::type>::visitFloat(ArduinoJson::V6211HB::JsonFloat) [with T = long long unsigned int]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/VariantCompare.hpp:59:17:ArduinoJson::V6211HB::detail::CompareResult ArduinoJson::V6211HB::detail::Comparer<T, typename ArduinoJson::V6211HB::detail::enable_if<(ArduinoJson::V6211HB::detail::is_integral<T>::value || ArduinoJson::V6211HB::detail::is_floating_point<T>::value)>::type>::visitSignedInteger(ArduinoJson::V6211HB::JsonInteger) [with T = long long unsigned int]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/VariantCompare.hpp:63:17:ArduinoJson::V6211HB::detail::CompareResult ArduinoJson::V6211HB::detail::Comparer<T, typename ArduinoJson::V6211HB::detail::enable_if<(ArduinoJson::V6211HB::detail::is_integral<T>::value || ArduinoJson::V6211HB::detail::is_floating_point<T>::value)>::type>::visitUnsignedInteger(ArduinoJson::V6211HB::JsonUInt) [with T = long long unsigned int]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/VariantCompare.hpp:67:17:ArduinoJson::V6211HB::detail::CompareResult ArduinoJson::V6211HB::detail::Comparer<T, typename ArduinoJson::V6211HB::detail::enable_if<(ArduinoJson::V6211HB::detail::is_integral<T>::value || ArduinoJson::V6211HB::detail::is_floating_point<T>::value)>::type>::visitBoolean(bool) [with T = long long unsigned int]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/VariantCompare.hpp:55:17:ArduinoJson::V6211HB::detail::CompareResult ArduinoJson::V6211HB::detail::Comparer<T, typename ArduinoJson::V6211HB::detail::enable_if<(ArduinoJson::V6211HB::detail::is_integral<T>::value || ArduinoJson::V6211HB::detail::is_floating_point<T>::value)>::type>::visitFloat(ArduinoJson::V6211HB::JsonFloat) [with T = bool]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/VariantCompare.hpp:59:17:ArduinoJson::V6211HB::detail::CompareResult ArduinoJson::V6211HB::detail::Comparer<T, typename ArduinoJson::V6211HB::detail::enable_if<(ArduinoJson::V6211HB::detail::is_integral<T>::value || ArduinoJson::V6211HB::detail::is_floating_point<T>::value)>::type>::visitSignedInteger(ArduinoJson::V6211HB::JsonInteger) [with T = bool]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/VariantCompare.hpp:63:17:ArduinoJson::V6211HB::detail::CompareResult ArduinoJson::V6211HB::detail::Comparer<T, typename ArduinoJson::V6211HB::detail::enable_if<(ArduinoJson::V6211HB::detail::is_integral<T>::value || ArduinoJson::V6211HB::detail::is_floating_point<T>::value)>::type>::visitUnsignedInteger(ArduinoJson::V6211HB::JsonUInt) [with T = bool]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/VariantCompare.hpp:67:17:ArduinoJson::V6211HB::detail::CompareResult ArduinoJson::V6211HB::detail::Comparer<T, typename ArduinoJson::V6211HB::detail::enable_if<(ArduinoJson::V6211HB::detail::is_integral<T>::value || ArduinoJson::V6211HB::detail::is_floating_point<T>::value)>::type>::visitBoolean(bool) [with T = bool]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/ConverterImpl.hpp:156:1:typename ArduinoJson::V6211HB::detail::enable_if<ArduinoJson::V6211HB::detail::IsString<TString>::value, bool>::type ArduinoJson::V6211HB::convertToJson(const T&, ArduinoJson::V6211HB::JsonVariant) [with T = std::__cxx11::basic_string<char>]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/VariantRefBase.hpp:272:19:const TDerived& ArduinoJson::V6211HB::detail::VariantRefBase<TDerived>::derived() const [with TDerived = ArduinoJson::V6211HB::detail::MemberProxy<ArduinoJson::V6211HB::JsonDocument&, std::__cxx11::basic_string<char> >]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/../Variant/VariantData.hpp:29:34:typename TVisitor::result_type ArduinoJson::V6211HB::detail::VariantData::accept(TVisitor&) const [with TVisitor = ArduinoJson::V6211HB::detail::Comparer<ArduinoJson::V6211HB::StaticJsonDocument<1024>, void>]	9
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Json/../Deserialization/../Deserialization/../Deserialization/Readers/IteratorReader.hpp:40:12:ArduinoJson::V6211HB::detail::Reader<TSource, typename ArduinoJson::V6211HB::detail::void_<typename TSource::const_iterator>::type>::Reader(const TSource&) [with TSource = std::__cxx11::basic_string<char>]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Json/JsonDeserializer.hpp:24:3:ArduinoJson::V6211HB::detail::JsonDeserializer<TReader, TStringStorage>::JsonDeserializer(ArduinoJson::V6211HB::detail::MemoryPool*, TReader, TStringStorage) [with TReader = ArduinoJson::V6211HB::detail::Reader<std::__cxx11::basic_string<char>, void>; TStringStorage = ArduinoJson::V6211HB::detail::StringCopier]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Json/JsonDeserializer.hpp:63:30:ArduinoJson::V6211HB::DeserializationError::Code ArduinoJson::V6211HB::detail::JsonDeserializer<TReader, TStringStorage>::parseVariant(ArduinoJson::V6211HB::detail::VariantData&, TFilter, ArduinoJson::V6211HB::DeserializationOption::NestingLimit) [with TFilter = ArduinoJson::V6211HB::detail::AllowAllFilter; TReader = ArduinoJson::V6211HB::detail::Reader<std::__cxx11::basic_string<char>, void>; TStringStorage = ArduinoJson::V6211HB::detail::StringCopier]	17
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Json/../Json/Latch.hpp:24:7:int ArduinoJson::V6211HB::detail::Latch<TReader>::last() const [with TReader = ArduinoJson::V6211HB::detail::Reader<std::__cxx11::basic_string<char>, void>]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Memory/../Strings/../Strings/Adapters/StringObject.hpp:40:3:static typename ArduinoJson::V6211HB::detail::enable_if<ArduinoJson::V6211HB::detail::string_traits<U>::has_data, const char*>::type ArduinoJson::V6211HB::detail::StringAdapter<T, typename ArduinoJson::V6211HB::detail::enable_if<((ArduinoJson::V6211HB::detail::string_traits<T>::has_cstr || ArduinoJson::V6211HB::detail::string_traits<T>::has_data) && (ArduinoJson::V6211HB::detail::string_traits<T>::has_length || ArduinoJson::V6211HB::detail::string_traits<T>::has_size))>::type>::get_data(const U&) [with U = std::__cxx11::basic_string<char>; T = std::__cxx11::basic_string<char>]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Memory/../Strings/../Strings/Adapters/StringObject.hpp:27:71:static typename ArduinoJson::V6211HB::detail::enable_if<ArduinoJson::V6211HB::detail::string_traits<U>::has_size, unsigned int>::type ArduinoJson::V6211HB::detail::StringAdapter<T, typename ArduinoJson::V6211HB::detail::enable_if<((ArduinoJson::V6211HB::detail::string_traits<T>::has_cstr || ArduinoJson::V6211HB::detail::string_traits<T>::has_data) && (ArduinoJson::V6211HB::detail::string_traits<T>::has_length || ArduinoJson::V6211HB::detail::string_traits<T>::has_size))>::type>::get_size(const U&) [with U = std::__cxx11::basic_string<char>; T = std::__cxx11::basic_string<char>]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Collection/CollectionImpl.hpp:78:21:ArduinoJson::V6211HB::detail::VariantSlot* ArduinoJson::V6211HB::detail::CollectionData::getSlot(TAdaptedString) const [with TAdaptedString = ArduinoJson::V6211HB::detail::SizedRamString]	4
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Collection/CollectionImpl.hpp:78:21:ArduinoJson::V6211HB::detail::VariantSlot* ArduinoJson::V6211HB::detail::CollectionData::getSlot(TAdaptedString) const [with TAdaptedString = ArduinoJson::V6211HB::detail::StaticStringAdapter]	4
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Memory/../Strings/StringAdapters.hpp:48:1:typename ArduinoJson::V6211HB::detail::enable_if<(TAdaptedString1::typeSortKey <= TAdaptedString2::typeSortKey), bool>::type ArduinoJson::V6211HB::detail::stringEquals(TAdaptedString1, TAdaptedString2) [with TAdaptedString1 = ArduinoJson::V6211HB::detail::JsonStringAdapter; TAdaptedString2 = ArduinoJson::V6211HB::detail::StaticStringAdapter]	4
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/../Variant/VariantData.hpp:311:10:void ArduinoJson::V6211HB::detail::VariantData::VariantStringSetter::operator()(TStoredString) [with TStoredString = ArduinoJson::V6211HB::JsonString]	2
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/../Json/../Json/TextFormatter.hpp:23:12:ArduinoJson::V6211HB::detail::TextFormatter<TWriter>::TextFormatter(TWriter) [with TWriter = ArduinoJson::V6211HB::detail::Writer<std::__cxx11::basic_string<char>, void>]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/../Variant/VariantData.hpp:29:34:typename TVisitor::result_type ArduinoJson::V6211HB::detail::VariantData::accept(TVisitor&) const [with TVisitor = ArduinoJson::V6211HB::detail::JsonSerializer<ArduinoJson::V6211HB::detail::Writer<std::__cxx11::basic_string<char>, void> >]	11
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/../Json/JsonSerializer.hpp:96:10:size_t ArduinoJson::V6211HB::detail::JsonSerializer<TWriter>::visitNull() [with TWriter = ArduinoJson::V6211HB::detail::Writer<std::__cxx11::basic_string<char>, void>]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/../Numbers/arithmeticCompare.hpp:23:15:ArduinoJson::V6211HB::detail::CompareResult ArduinoJson::V6211HB::detail::arithmeticCompare(const T&, const T&) [with T = double]	3
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/../Numbers/arithmeticCompare.hpp:80:15:ArduinoJson::V6211HB::detail::CompareResult ArduinoJson::V6211HB::detail::arithmeticCompare(const T1&, const T2&, typename ArduinoJson::V6211HB::detail::enable_if<(ArduinoJson::V6211HB::detail::is_floating_point<T>::value || ArduinoJson::V6211HB::detail::is_floating_point<TIn>::value)>::type*) [with T1 = long long int; T2 = double]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/../Numbers/arithmeticCompare.hpp:80:15:ArduinoJson::V6211HB::detail::CompareResult ArduinoJson::V6211HB::detail::arithmeticCompare(const T1&, const T2&, typename ArduinoJson::V6211HB::detail::enable_if<(ArduinoJson::V6211HB::detail::is_floating_point<T>::value || ArduinoJson::V6211HB::detail::is_floating_point<TIn>::value)>::type*) [with T1 = long long unsigned int; T2 = double]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Memory/../Strings/StringAdapters.hpp:41:1:typename ArduinoJson::V6211HB::detail::enable_if<(TAdaptedString1::typeSortKey > TAdaptedString2::typeSortKey), int>::type ArduinoJson::V6211HB::detail::stringCompare(TAdaptedString1, TAdaptedString2) [with TAdaptedString1 = ArduinoJson::V6211HB::detail::StaticStringAdapter; TAdaptedString2 = ArduinoJson::V6211HB::detail::SizedRamString]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/../Numbers/arithmeticCompare.hpp:80:15:ArduinoJson::V6211HB::detail::CompareResult ArduinoJson::V6211HB::detail::arithmeticCompare(const T1&, const T2&, typename ArduinoJson::V6211HB::detail::enable_if<(ArduinoJson::V6211HB::detail::is_floating_point<T>::value || ArduinoJson::V6211HB::detail::is_floating_point<TIn>::value)>::type*) [with T1 = double; T2 = long long int]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/../Numbers/arithmeticCompare.hpp:23:15:ArduinoJson::V6211HB::detail::CompareResult ArduinoJson::V6211HB::detail::arithmeticCompare(const T&, const T&) [with T = long long int]	3
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/../Numbers/arithmeticCompare.hpp:58:15:ArduinoJson::V6211HB::detail::CompareResult ArduinoJson::V6211HB::detail::arithmeticCompare(const T1&, const T2&, typename ArduinoJson::V6211HB::detail::enable_if<((((ArduinoJson::V6211HB::detail::is_integral<T>::value && ArduinoJson::V6211HB::detail::is_integral<TIn>::value) && ArduinoJson::V6211HB::detail::is_unsigned<T1>::value) && ArduinoJson::V6211HB::detail::is_signed<TIn>::value) && (sizeof (T2) == sizeof (T1)))>::type*) [with T1 = long long unsigned int; T2 = long long int]	2
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/../Numbers/arithmeticCompare.hpp:80:15:ArduinoJson::V6211HB::detail::CompareResult ArduinoJson::V6211HB::detail::arithmeticCompare(const T1&, const T2&, typename ArduinoJson::V6211HB::detail::enable_if<(ArduinoJson::V6211HB::detail::is_floating_point<T>::value || ArduinoJson::V6211HB::detail::is_floating_point<TIn>::value)>::type*) [with T1 = double; T2 = long long unsigned int]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/../Numbers/arithmeticCompare.hpp:69:15:ArduinoJson::V6211HB::detail::CompareResult ArduinoJson::V6211HB::detail::arithmeticCompare(const T1&, const T2&, typename ArduinoJson::V6211HB::detail::enable_if<((((ArduinoJson::V6211HB::detail::is_integral<T>::value && ArduinoJson::V6211HB::detail::is_integral<TIn>::value) && ArduinoJson::V6211HB::detail::is_signed<T1>::value) && ArduinoJson::V6211HB::detail::is_unsigned<TIn>::value) && (sizeof (T2) == sizeof (T1)))>::type*) [with T1 = long long int; T2 = long long unsigned int]	2
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/../Numbers/arithmeticCompare.hpp:23:15:ArduinoJson::V6211HB::detail::CompareResult ArduinoJson::V6211HB::detail::arithmeticCompare(const T&, const T&) [with T = long long unsigned int]	3
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/../Numbers/arithmeticCompare.hpp:80:15:ArduinoJson::V6211HB::detail::CompareResult ArduinoJson::V6211HB::detail::arithmeticCompare(const T1&, const T2&, typename ArduinoJson::V6211HB::detail::enable_if<(ArduinoJson::V6211HB::detail::is_floating_point<T>::value || ArduinoJson::V6211HB::detail::is_floating_point<TIn>::value)>::type*) [with T1 = double; T2 = bool]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/../Numbers/arithmeticCompare.hpp:41:15:ArduinoJson::V6211HB::detail::CompareResult ArduinoJson::V6211HB::detail::arithmeticCompare(const T1&, const T2&, typename ArduinoJson::V6211HB::detail::enable_if<((ArduinoJson::V6211HB::detail::is_integral<T>::value && ArduinoJson::V6211HB::detail::is_integral<TIn>::value) && (sizeof (T2) < sizeof (T1)))>::type*) [with T1 = long long int; T2 = bool]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/../Numbers/arithmeticCompare.hpp:41:15:ArduinoJson::V6211HB::detail::CompareResult ArduinoJson::V6211HB::detail::arithmeticCompare(const T1&, const T2&, typename ArduinoJson::V6211HB::detail::enable_if<((ArduinoJson::V6211HB::detail::is_integral<T>::value && ArduinoJson::V6211HB::detail::is_integral<TIn>::value) && (sizeof (T2) < sizeof (T1)))>::type*) [with T1 = long long unsigned int; T2 = bool]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/VariantFunctions.hpp:41:13:bool ArduinoJson::V6211HB::detail::variantSetString(ArduinoJson::V6211HB::detail::VariantData*, TAdaptedString, ArduinoJson::V6211HB::detail::MemoryPool*) [with TAdaptedString = ArduinoJson::V6211HB::detail::SizedRamString]	2
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Json/../Deserialization/../Deserialization/../Deserialization/Readers/IteratorReader.hpp:14:12:ArduinoJson::V6211HB::detail::IteratorReader<TIterator>::IteratorReader(TIterator, TIterator) [with TIterator = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Json/../Json/Latch.hpp:14:3:ArduinoJson::V6211HB::detail::Latch<TReader>::Latch(TReader) [with TReader = ArduinoJson::V6211HB::detail::Reader<std::__cxx11::basic_string<char>, void>]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Json/JsonDeserializer.hpp:583:30:ArduinoJson::V6211HB::DeserializationError::Code ArduinoJson::V6211HB::detail::JsonDeserializer<TReader, TStringStorage>::skipSpacesAndComments() [with TReader = ArduinoJson::V6211HB::detail::Reader<std::__cxx11::basic_string<char>, void>; TStringStorage = ArduinoJson::V6211HB::detail::StringCopier]	7
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Json/JsonDeserializer.hpp:47:8:char ArduinoJson::V6211HB::detail::JsonDeserializer<TReader, TStringStorage>::current() [with TReader = ArduinoJson::V6211HB::detail::Reader<std::__cxx11::basic_string<char>, void>; TStringStorage = ArduinoJson::V6211HB::detail::StringCopier]	2
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Json/JsonDeserializer.hpp:149:30:ArduinoJson::V6211HB::DeserializationError::Code ArduinoJson::V6211HB::detail::JsonDeserializer<TReader, TStringStorage>::parseArray(ArduinoJson::V6211HB::detail::CollectionData&, TFilter, ArduinoJson::V6211HB::DeserializationOption::NestingLimit) [with TFilter = ArduinoJson::V6211HB::detail::AllowAllFilter; TReader = ArduinoJson::V6211HB::detail::Reader<std::__cxx11::basic_string<char>, void>; TStringStorage = ArduinoJson::V6211HB::detail::StringCopier]	11
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Json/JsonDeserializer.hpp:203:30:ArduinoJson::V6211HB::DeserializationError::Code ArduinoJson::V6211HB::detail::JsonDeserializer<TReader, TStringStorage>::skipArray(ArduinoJson::V6211HB::DeserializationOption::NestingLimit) [with TReader = ArduinoJson::V6211HB::detail::Reader<std::__cxx11::basic_string<char>, void>; TStringStorage = ArduinoJson::V6211HB::detail::StringCopier]	6
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Json/JsonDeserializer.hpp:235:30:ArduinoJson::V6211HB::DeserializationError::Code ArduinoJson::V6211HB::detail::JsonDeserializer<TReader, TStringStorage>::parseObject(ArduinoJson::V6211HB::detail::CollectionData&, TFilter, ArduinoJson::V6211HB::DeserializationOption::NestingLimit) [with TFilter = ArduinoJson::V6211HB::detail::AllowAllFilter; TReader = ArduinoJson::V6211HB::detail::Reader<std::__cxx11::basic_string<char>, void>; TStringStorage = ArduinoJson::V6211HB::detail::StringCopier]	16
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Json/JsonDeserializer.hpp:321:30:ArduinoJson::V6211HB::DeserializationError::Code ArduinoJson::V6211HB::detail::JsonDeserializer<TReader, TStringStorage>::skipObject(ArduinoJson::V6211HB::DeserializationOption::NestingLimit) [with TReader = ArduinoJson::V6211HB::detail::Reader<std::__cxx11::basic_string<char>, void>; TStringStorage = ArduinoJson::V6211HB::detail::StringCopier]	12
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Json/JsonDeserializer.hpp:388:30:ArduinoJson::V6211HB::DeserializationError::Code ArduinoJson::V6211HB::detail::JsonDeserializer<TReader, TStringStorage>::parseStringValue(ArduinoJson::V6211HB::detail::VariantData&) [with TReader = ArduinoJson::V6211HB::detail::Reader<std::__cxx11::basic_string<char>, void>; TStringStorage = ArduinoJson::V6211HB::detail::StringCopier]	2
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Json/JsonDeserializer.hpp:484:30:ArduinoJson::V6211HB::DeserializationError::Code ArduinoJson::V6211HB::detail::JsonDeserializer<TReader, TStringStorage>::skipQuotedString() [with TReader = ArduinoJson::V6211HB::detail::Reader<std::__cxx11::basic_string<char>, void>; TStringStorage = ArduinoJson::V6211HB::detail::StringCopier]	5
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Json/JsonDeserializer.hpp:649:30:ArduinoJson::V6211HB::DeserializationError::Code ArduinoJson::V6211HB::detail::JsonDeserializer<TReader, TStringStorage>::skipKeyword(const char*) [with TReader = ArduinoJson::V6211HB::detail::Reader<std::__cxx11::basic_string<char>, void>; TStringStorage = ArduinoJson::V6211HB::detail::StringCopier]	4
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Json/JsonDeserializer.hpp:513:30:ArduinoJson::V6211HB::DeserializationError::Code ArduinoJson::V6211HB::detail::JsonDeserializer<TReader, TStringStorage>::parseNumericValue(ArduinoJson::V6211HB::detail::VariantData&) [with TReader = ArduinoJson::V6211HB::detail::Reader<std::__cxx11::basic_string<char>, void>; TStringStorage = ArduinoJson::V6211HB::detail::StringCopier]	5
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Json/JsonDeserializer.hpp:530:30:ArduinoJson::V6211HB::DeserializationError::Code ArduinoJson::V6211HB::detail::JsonDeserializer<TReader, TStringStorage>::skipNumericValue() [with TReader = ArduinoJson::V6211HB::detail::Reader<std::__cxx11::basic_string<char>, void>; TStringStorage = ArduinoJson::V6211HB::detail::StringCopier]	2
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Memory/../Strings/StringAdapters.hpp:48:1:typename ArduinoJson::V6211HB::detail::enable_if<(TAdaptedString1::typeSortKey <= TAdaptedString2::typeSortKey), bool>::type ArduinoJson::V6211HB::detail::stringEquals(TAdaptedString1, TAdaptedString2) [with TAdaptedString1 = ArduinoJson::V6211HB::detail::SizedRamString; TAdaptedString2 = ArduinoJson::V6211HB::detail::StaticStringAdapter]	4
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/VariantRefBase.hpp:272:19:const TDerived& ArduinoJson::V6211HB::detail::VariantRefBase<TDerived>::derived() const [with TDerived = ArduinoJson::V6211HB::detail::MemberProxy<ArduinoJson::V6211HB::JsonDocument&, const char*>]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Memory/../Strings/StringAdapters.hpp:48:1:typename ArduinoJson::V6211HB::detail::enable_if<(TAdaptedString1::typeSortKey <= TAdaptedString2::typeSortKey), bool>::type ArduinoJson::V6211HB::detail::stringEquals(TAdaptedString1, TAdaptedString2) [with TAdaptedString1 = ArduinoJson::V6211HB::detail::StaticStringAdapter; TAdaptedString2 = ArduinoJson::V6211HB::detail::StaticStringAdapter]	4
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Array/../Variant/SlotFunctions.hpp:16:8:void ArduinoJson::V6211HB::detail::SlotKeySetter::operator()(TStoredString) [with TStoredString = ArduinoJson::V6211HB::JsonString]	2
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/../Variant/../Numbers/../Numbers/../Polyfills/math.hpp:16:6:bool ArduinoJson::V6211HB::detail::isnan(T) [with T = double]	2
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/../Variant/../Numbers/../Numbers/../Polyfills/math.hpp:23:6:bool ArduinoJson::V6211HB::detail::isinf(T) [with T = double]	3
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/../Json/../Json/../Numbers/FloatParts.hpp:20:3:ArduinoJson::V6211HB::detail::FloatParts<TFloat>::FloatParts(TFloat) [with TFloat = double]	7
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/../Json/../Json/../Serialization/CountingDecorator.hpp:14:12:ArduinoJson::V6211HB::detail::CountingDecorator<TWriter>::CountingDecorator(TWriter&) [with TWriter = ArduinoJson::V6211HB::detail::Writer<std::__cxx11::basic_string<char>, void>]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/../Json/JsonSerializer.hpp:61:10:size_t ArduinoJson::V6211HB::detail::JsonSerializer<TWriter>::visitFloat(ArduinoJson::V6211HB::JsonFloat) [with TWriter = ArduinoJson::V6211HB::detail::Writer<std::__cxx11::basic_string<char>, void>]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/../Json/JsonSerializer.hpp:40:10:size_t ArduinoJson::V6211HB::detail::JsonSerializer<TWriter>::visitObject(const ArduinoJson::V6211HB::detail::CollectionData&) [with TWriter = ArduinoJson::V6211HB::detail::Writer<std::__cxx11::basic_string<char>, void>]	3
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/../Json/JsonSerializer.hpp:71:10:size_t ArduinoJson::V6211HB::detail::JsonSerializer<TWriter>::visitString(const char*, size_t) [with TWriter = ArduinoJson::V6211HB::detail::Writer<std::__cxx11::basic_string<char>, void>]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/../Json/JsonSerializer.hpp:76:10:size_t ArduinoJson::V6211HB::detail::JsonSerializer<TWriter>::visitRawJson(const char*, size_t) [with TWriter = ArduinoJson::V6211HB::detail::Writer<std::__cxx11::basic_string<char>, void>]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/../Json/JsonSerializer.hpp:81:10:size_t ArduinoJson::V6211HB::detail::JsonSerializer<TWriter>::visitSignedInteger(ArduinoJson::V6211HB::JsonInteger) [with TWriter = ArduinoJson::V6211HB::detail::Writer<std::__cxx11::basic_string<char>, void>]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/../Json/JsonSerializer.hpp:86:10:size_t ArduinoJson::V6211HB::detail::JsonSerializer<TWriter>::visitUnsignedInteger(ArduinoJson::V6211HB::JsonUInt) [with TWriter = ArduinoJson::V6211HB::detail::Writer<std::__cxx11::basic_string<char>, void>]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/../Json/JsonSerializer.hpp:91:10:size_t ArduinoJson::V6211HB::detail::JsonSerializer<TWriter>::visitBoolean(bool) [with TWriter = ArduinoJson::V6211HB::detail::Writer<std::__cxx11::basic_string<char>, void>]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/../Json/../Json/TextFormatter.hpp:148:8:void ArduinoJson::V6211HB::detail::TextFormatter<TWriter>::writeRaw(const char*) [with TWriter = ArduinoJson::V6211HB::detail::Writer<std::__cxx11::basic_string<char>, void>]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/../Json/JsonSerializer.hpp:102:10:size_t ArduinoJson::V6211HB::detail::JsonSerializer<TWriter>::bytesWritten() const [with TWriter = ArduinoJson::V6211HB::detail::Writer<std::__cxx11::basic_string<char>, void>]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Memory/../Strings/StringAdapters.hpp:21:1:typename ArduinoJson::V6211HB::detail::enable_if<(TAdaptedString1::typeSortKey <= TAdaptedString2::typeSortKey), int>::type ArduinoJson::V6211HB::detail::stringCompare(TAdaptedString1, TAdaptedString2) [with TAdaptedString1 = ArduinoJson::V6211HB::detail::SizedRamString; TAdaptedString2 = ArduinoJson::V6211HB::detail::StaticStringAdapter]	6
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Memory/../Strings/StringAdapters.hpp:70:13:void ArduinoJson::V6211HB::detail::stringGetChars(TAdaptedString, char*, size_t) [with TAdaptedString = ArduinoJson::V6211HB::detail::JsonStringAdapter]	2
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/../Variant/VariantData.hpp:292:15:bool ArduinoJson::V6211HB::detail::VariantData::setString(TAdaptedString, ArduinoJson::V6211HB::detail::MemoryPool*) [with TAdaptedString = ArduinoJson::V6211HB::detail::SizedRamString]	2
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Json/JsonDeserializer.hpp:51:8:void ArduinoJson::V6211HB::detail::JsonDeserializer<TReader, TStringStorage>::move() [with TReader = ArduinoJson::V6211HB::detail::Reader<std::__cxx11::basic_string<char>, void>; TStringStorage = ArduinoJson::V6211HB::detail::StringCopier]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Json/JsonDeserializer.hpp:55:8:bool ArduinoJson::V6211HB::detail::JsonDeserializer<TReader, TStringStorage>::eat(char) [with TReader = ArduinoJson::V6211HB::detail::Reader<std::__cxx11::basic_string<char>, void>; TStringStorage = ArduinoJson::V6211HB::detail::StringCopier]	2
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Json/../Deserialization/../Deserialization/../Deserialization/Filter.hpp:64:18:ArduinoJson::V6211HB::detail::AllowAllFilter ArduinoJson::V6211HB::detail::AllowAllFilter::operator[](const TKey&) const [with TKey = long unsigned int]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Json/JsonDeserializer.hpp:115:30:ArduinoJson::V6211HB::DeserializationError::Code ArduinoJson::V6211HB::detail::JsonDeserializer<TReader, TStringStorage>::skipVariant(ArduinoJson::V6211HB::DeserializationOption::NestingLimit) [with TReader = ArduinoJson::V6211HB::detail::Reader<std::__cxx11::basic_string<char>, void>; TStringStorage = ArduinoJson::V6211HB::detail::StringCopier]	11
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Json/JsonDeserializer.hpp:379:30:ArduinoJson::V6211HB::DeserializationError::Code ArduinoJson::V6211HB::detail::JsonDeserializer<TReader, TStringStorage>::parseKey() [with TReader = ArduinoJson::V6211HB::detail::Reader<std::__cxx11::basic_string<char>, void>; TStringStorage = ArduinoJson::V6211HB::detail::StringCopier]	2
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Json/../Deserialization/../Deserialization/../Deserialization/Filter.hpp:64:18:ArduinoJson::V6211HB::detail::AllowAllFilter ArduinoJson::V6211HB::detail::AllowAllFilter::operator[](const TKey&) const [with TKey = const char*]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Json/JsonDeserializer.hpp:476:30:ArduinoJson::V6211HB::DeserializationError::Code ArduinoJson::V6211HB::detail::JsonDeserializer<TReader, TStringStorage>::skipKey() [with TReader = ArduinoJson::V6211HB::detail::Reader<std::__cxx11::basic_string<char>, void>; TStringStorage = ArduinoJson::V6211HB::detail::StringCopier]	2
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Json/JsonDeserializer.hpp:402:30:ArduinoJson::V6211HB::DeserializationError::Code ArduinoJson::V6211HB::detail::JsonDeserializer<TReader, TStringStorage>::parseQuotedString() [with TReader = ArduinoJson::V6211HB::detail::Reader<std::__cxx11::basic_string<char>, void>; TStringStorage = ArduinoJson::V6211HB::detail::StringCopier]	10
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Json/JsonDeserializer.hpp:558:22:static bool ArduinoJson::V6211HB::detail::JsonDeserializer<TReader, TStringStorage>::canBeInNumber(char) [with TReader = ArduinoJson::V6211HB::detail::Reader<std::__cxx11::basic_string<char>, void>; TStringStorage = ArduinoJson::V6211HB::detail::StringCopier]	7
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/../Json/../Json/../Numbers/FloatParts.hpp:57:18:static int16_t ArduinoJson::V6211HB::detail::FloatParts<TFloat>::normalize(TFloat&) [with TFloat = double]	10
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/../Json/../Json/TextFormatter.hpp:68:8:void ArduinoJson::V6211HB::detail::TextFormatter<TWriter>::writeFloat(T) [with T = double; TWriter = ArduinoJson::V6211HB::detail::Writer<std::__cxx11::basic_string<char>, void>]	6
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/../Json/JsonSerializer.hpp:106:8:void ArduinoJson::V6211HB::detail::JsonSerializer<TWriter>::write(char) [with TWriter = ArduinoJson::V6211HB::detail::Writer<std::__cxx11::basic_string<char>, void>]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/../Json/../Json/TextFormatter.hpp:39:8:void ArduinoJson::V6211HB::detail::TextFormatter<TWriter>::writeString(const char*) [with TWriter = ArduinoJson::V6211HB::detail::Writer<std::__cxx11::basic_string<char>, void>]	2
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/../Json/../Json/TextFormatter.hpp:47:8:void ArduinoJson::V6211HB::detail::TextFormatter<TWriter>::writeString(const char*, size_t) [with TWriter = ArduinoJson::V6211HB::detail::Writer<std::__cxx11::basic_string<char>, void>]	2
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/../Json/../Json/TextFormatter.hpp:152:8:void ArduinoJson::V6211HB::detail::TextFormatter<TWriter>::writeRaw(const char*, size_t) [with TWriter = ArduinoJson::V6211HB::detail::Writer<std::__cxx11::basic_string<char>, void>]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/../Json/../Json/TextFormatter.hpp:103:49:typename ArduinoJson::V6211HB::detail::enable_if<ArduinoJson::V6211HB::detail::is_signed<TOut>::value>::type ArduinoJson::V6211HB::detail::TextFormatter<TWriter>::writeInteger(T) [with T = long long int; TWriter = ArduinoJson::V6211HB::detail::Writer<std::__cxx11::basic_string<char>, void>]	2
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/../Json/../Json/TextFormatter.hpp:116:51:typename ArduinoJson::V6211HB::detail::enable_if<ArduinoJson::V6211HB::detail::is_unsigned<TOut>::value>::type ArduinoJson::V6211HB::detail::TextFormatter<TWriter>::writeInteger(T) [with T = long long unsigned int; TWriter = ArduinoJson::V6211HB::detail::Writer<std::__cxx11::basic_string<char>, void>]	2
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/../Json/../Json/TextFormatter.hpp:32:8:void ArduinoJson::V6211HB::detail::TextFormatter<TWriter>::writeBoolean(bool) [with TWriter = ArduinoJson::V6211HB::detail::Writer<std::__cxx11::basic_string<char>, void>]	2
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/../Json/../Json/../Serialization/CountingDecorator.hpp:20:8:void ArduinoJson::V6211HB::detail::CountingDecorator<TWriter>::write(const uint8_t*, size_t) [with TWriter = ArduinoJson::V6211HB::detail::Writer<std::__cxx11::basic_string<char>, void>]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/../Json/../Json/TextFormatter.hpp:28:10:size_t ArduinoJson::V6211HB::detail::TextFormatter<TWriter>::bytesWritten() const [with TWriter = ArduinoJson::V6211HB::detail::Writer<std::__cxx11::basic_string<char>, void>]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Memory/MemoryPool.hpp:249:6:bool ArduinoJson::V6211HB::detail::storeString(ArduinoJson::V6211HB::detail::MemoryPool*, TAdaptedString, TCallback) [with TAdaptedString = ArduinoJson::V6211HB::detail::SizedRamString; TCallback = ArduinoJson::V6211HB::detail::VariantData::VariantStringSetter]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/VariantFunctions.hpp:85:14:ArduinoJson::V6211HB::detail::VariantData* ArduinoJson::V6211HB::detail::variantGetOrAddMember(ArduinoJson::V6211HB::detail::VariantData*, TAdaptedString, ArduinoJson::V6211HB::detail::MemoryPool*) [with TAdaptedString = ArduinoJson::V6211HB::detail::SizedRamString]	2
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Json/../Json/Latch.hpp:20:8:void ArduinoJson::V6211HB::detail::Latch<TReader>::clear() [with TReader = ArduinoJson::V6211HB::detail::Reader<std::__cxx11::basic_string<char>, void>]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Json/../Json/Latch.hpp:36:8:void ArduinoJson::V6211HB::detail::Latch<TReader>::load() [with TReader = ArduinoJson::V6211HB::detail::Reader<std::__cxx11::basic_string<char>, void>]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Json/JsonDeserializer.hpp:572:22:static bool ArduinoJson::V6211HB::detail::JsonDeserializer<TReader, TStringStorage>::isQuote(char) [with TReader = ArduinoJson::V6211HB::detail::Reader<std::__cxx11::basic_string<char>, void>; TStringStorage = ArduinoJson::V6211HB::detail::StringCopier]	3
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Json/JsonDeserializer.hpp:456:30:ArduinoJson::V6211HB::DeserializationError::Code ArduinoJson::V6211HB::detail::JsonDeserializer<TReader, TStringStorage>::parseNonQuotedString() [with TReader = ArduinoJson::V6211HB::detail::Reader<std::__cxx11::basic_string<char>, void>; TStringStorage = ArduinoJson::V6211HB::detail::StringCopier]	4
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Json/JsonDeserializer.hpp:504:30:ArduinoJson::V6211HB::DeserializationError::Code ArduinoJson::V6211HB::detail::JsonDeserializer<TReader, TStringStorage>::skipNonQuotedString() [with TReader = ArduinoJson::V6211HB::detail::Reader<std::__cxx11::basic_string<char>, void>; TStringStorage = ArduinoJson::V6211HB::detail::StringCopier]	2
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Json/JsonDeserializer.hpp:539:30:ArduinoJson::V6211HB::DeserializationError::Code ArduinoJson::V6211HB::detail::JsonDeserializer<TReader, TStringStorage>::parseHex4(uint16_t&) [with TReader = ArduinoJson::V6211HB::detail::Reader<std::__cxx11::basic_string<char>, void>; TStringStorage = ArduinoJson::V6211HB::detail::StringCopier]	4
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Json/../Json/Utf8.hpp:13:13:void ArduinoJson::V6211HB::detail::Utf8::encodeCodepoint(uint32_t, TStringBuilder&) [with TStringBuilder = ArduinoJson::V6211HB::detail::StringCopier]	5
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Json/JsonDeserializer.hpp:554:22:static bool ArduinoJson::V6211HB::detail::JsonDeserializer<TReader, TStringStorage>::isBetween(char, char, char) [with TReader = ArduinoJson::V6211HB::detail::Reader<std::__cxx11::basic_string<char>, void>; TStringStorage = ArduinoJson::V6211HB::detail::StringCopier]	3
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/VariantFunctions.hpp:78:14:ArduinoJson::V6211HB::detail::VariantData* ArduinoJson::V6211HB::detail::variantGetMember(const ArduinoJson::V6211HB::detail::VariantData*, TAdaptedString) [with TAdaptedString = ArduinoJson::V6211HB::detail::StaticStringAdapter]	2
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/../Json/../Json/TextFormatter.hpp:165:8:void ArduinoJson::V6211HB::detail::TextFormatter<TWriter>::writeRaw(char) [with TWriter = ArduinoJson::V6211HB::detail::Writer<std::__cxx11::basic_string<char>, void>]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/../Json/../Json/TextFormatter.hpp:116:51:typename ArduinoJson::V6211HB::detail::enable_if<ArduinoJson::V6211HB::detail::is_unsigned<TOut>::value>::type ArduinoJson::V6211HB::detail::TextFormatter<TWriter>::writeInteger(T) [with T = long unsigned int; TWriter = ArduinoJson::V6211HB::detail::Writer<std::__cxx11::basic_string<char>, void>]	2
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/../Json/../Json/TextFormatter.hpp:131:8:void ArduinoJson::V6211HB::detail::TextFormatter<TWriter>::writeDecimals(uint32_t, int8_t) [with TWriter = ArduinoJson::V6211HB::detail::Writer<std::__cxx11::basic_string<char>, void>]	2
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/../Json/../Json/TextFormatter.hpp:103:49:typename ArduinoJson::V6211HB::detail::enable_if<ArduinoJson::V6211HB::detail::is_signed<TOut>::value>::type ArduinoJson::V6211HB::detail::TextFormatter<TWriter>::writeInteger(T) [with T = short int; TWriter = ArduinoJson::V6211HB::detail::Writer<std::__cxx11::basic_string<char>, void>]	2
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/../Json/../Json/TextFormatter.hpp:55:8:void ArduinoJson::V6211HB::detail::TextFormatter<TWriter>::writeChar(char) [with TWriter = ArduinoJson::V6211HB::detail::Writer<std::__cxx11::basic_string<char>, void>]	3
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/../Json/../Json/TextFormatter.hpp:156:8:void ArduinoJson::V6211HB::detail::TextFormatter<TWriter>::writeRaw(const char*, const char*) [with TWriter = ArduinoJson::V6211HB::detail::Writer<std::__cxx11::basic_string<char>, void>]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/../Json/../Serialization/../Serialization/../Serialization/Writers/StdStringWriter.hpp:34:10:size_t ArduinoJson::V6211HB::detail::Writer<TDestination, typename ArduinoJson::V6211HB::detail::enable_if<ArduinoJson::V6211HB::detail::is_std_string<TDestination>::value>::type>::write(const uint8_t*, size_t) [with TDestination = std::__cxx11::basic_string<char>]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/../Json/../Json/../Serialization/CountingDecorator.hpp:24:10:size_t ArduinoJson::V6211HB::detail::CountingDecorator<TWriter>::count() const [with TWriter = ArduinoJson::V6211HB::detail::Writer<std::__cxx11::basic_string<char>, void>]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Memory/MemoryPool.hpp:223:6:bool ArduinoJson::V6211HB::detail::storeString(ArduinoJson::V6211HB::detail::MemoryPool*, TAdaptedString, ArduinoJson::V6211HB::detail::StringStoragePolicy::Copy, TCallback) [with TAdaptedString = ArduinoJson::V6211HB::detail::SizedRamString; TCallback = ArduinoJson::V6211HB::detail::VariantData::VariantStringSetter]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Variant/../Variant/VariantData.hpp:272:16:ArduinoJson::V6211HB::detail::VariantData* ArduinoJson::V6211HB::detail::VariantData::getOrAddMember(TAdaptedString, ArduinoJson::V6211HB::detail::MemoryPool*) [with TAdaptedString = ArduinoJson::V6211HB::detail::SizedRamString]	3
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Json/../Deserialization/../Deserialization/../Deserialization/Readers/IteratorReader.hpp:17:7:int ArduinoJson::V6211HB::detail::IteratorReader<TIterator>::read() [with TIterator = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >]	2
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Json/JsonDeserializer.hpp:567:22:static bool ArduinoJson::V6211HB::detail::JsonDeserializer<TReader, TStringStorage>::canBeInNonQuotedString(char) [with TReader = ArduinoJson::V6211HB::detail::Reader<std::__cxx11::basic_string<char>, void>; TStringStorage = ArduinoJson::V6211HB::detail::StringCopier]	4
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Json/JsonDeserializer.hpp:576:25:static uint8_t ArduinoJson::V6211HB::detail::JsonDeserializer<TReader, TStringStorage>::decodeHex(char) [with TReader = ArduinoJson::V6211HB::detail::Reader<std::__cxx11::basic_string<char>, void>; TStringStorage = ArduinoJson::V6211HB::detail::StringCopier]	2
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/../Json/../Json/../Serialization/CountingDecorator.hpp:16:8:void ArduinoJson::V6211HB::detail::CountingDecorator<TWriter>::write(uint8_t) [with TWriter = ArduinoJson::V6211HB::detail::Writer<std::__cxx11::basic_string<char>, void>]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/../Json/../Json/TextFormatter.hpp:116:51:typename ArduinoJson::V6211HB::detail::enable_if<ArduinoJson::V6211HB::detail::is_unsigned<TOut>::value>::type ArduinoJson::V6211HB::detail::TextFormatter<TWriter>::writeInteger(T) [with T = short unsigned int; TWriter = ArduinoJson::V6211HB::detail::Writer<std::__cxx11::basic_string<char>, void>]	2
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Collection/CollectionImpl.hpp:114:21:ArduinoJson::V6211HB::detail::VariantData* ArduinoJson::V6211HB::detail::CollectionData::getOrAddMember(TAdaptedString, ArduinoJson::V6211HB::detail::MemoryPool*) [with TAdaptedString = ArduinoJson::V6211HB::detail::SizedRamString]	3
E:\Programs\STM32CubeIDE_1.14.1\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.11.3.rel1.win32_1.1.100.202309141235\tools\arm-none-eabi\include\c++\11.3.1\bits\stl_iterator.h:1194:5:bool __gnu_cxx::operator<(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = const char*; _Container = std::__cxx11::basic_string<char>]	1
E:\Programs\STM32CubeIDE_1.14.1\STM32CubeIDE\plugins\com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-stm32.11.3.rel1.win32_1.1.100.202309141235\tools\arm-none-eabi\include\c++\11.3.1\bits\stl_iterator.h:1059:7:__gnu_cxx::__normal_iterator<_Iterator, _Container> __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator++(int) [with _Iterator = const char*; _Container = std::__cxx11::basic_string<char>]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Variant/../Json/../Serialization/../Serialization/../Serialization/Writers/StdStringWriter.hpp:29:10:size_t ArduinoJson::V6211HB::detail::Writer<TDestination, typename ArduinoJson::V6211HB::detail::enable_if<ArduinoJson::V6211HB::detail::is_std_string<TDestination>::value>::type>::write(uint8_t) [with TDestination = std::__cxx11::basic_string<char>]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Collection/CollectionImpl.hpp:37:21:ArduinoJson::V6211HB::detail::VariantData* ArduinoJson::V6211HB::detail::CollectionData::addMember(TAdaptedString, ArduinoJson::V6211HB::detail::MemoryPool*) [with TAdaptedString = ArduinoJson::V6211HB::detail::SizedRamString]	2
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Array/../Variant/SlotFunctions.hpp:27:13:bool ArduinoJson::V6211HB::detail::slotSetKey(ArduinoJson::V6211HB::detail::VariantSlot*, TAdaptedString, ArduinoJson::V6211HB::detail::MemoryPool*) [with TAdaptedString = ArduinoJson::V6211HB::detail::SizedRamString]	2
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Memory/MemoryPool.hpp:249:6:bool ArduinoJson::V6211HB::detail::storeString(ArduinoJson::V6211HB::detail::MemoryPool*, TAdaptedString, TCallback) [with TAdaptedString = ArduinoJson::V6211HB::detail::SizedRamString; TCallback = ArduinoJson::V6211HB::detail::SlotKeySetter]	1
E:/repositories 2/LIBRARY/CUSTOM/../ArduinoJson-6.x/src/ArduinoJson/Array/../Variant/../Variant/../Memory/MemoryPool.hpp:223:6:bool ArduinoJson::V6211HB::detail::storeString(ArduinoJson::V6211HB::detail::MemoryPool*, TAdaptedString, ArduinoJson::V6211HB::detail::StringStoragePolicy::Copy, TCallback) [with TAdaptedString = ArduinoJson::V6211HB::detail::SizedRamString; TCallback = ArduinoJson::V6211HB::detail::SlotKeySetter]	1
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/JSON_HANDLER.h:14:7:JSON_HANDLER::~JSON_HANDLER()	1
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/BUTTON_READ.h:10:7:BUTTON_READ::~BUTTON_READ()	1
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/UART_DEBUG.h:13:7:UART_DEBUG::~UART_DEBUG()	1
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/NEOWAY.h:14:7:NEOWAY::~NEOWAY()	1
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/UART_PRINTER.h:11:7:UART_PRINTER::~UART_PRINTER()	1
../Core/Src/main.cpp:307:1:void __static_initialization_and_destruction_0(int, int)	5
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/DYNAMIC_ARRAY.h:55:3:DynamicArray<Tda>::~DynamicArray() [with Tda = bool]	1
E:/repositories 2/LIBRARY/CUSTOM/../CUSTOM/DYNAMIC_ARRAY.h:55:3:DynamicArray<Tda>::~DynamicArray() [with Tda = VARIABLES*]	1
../Core/Src/main.cpp:307:1:cpp)	1
../Core/Src/main.cpp:307:1:cpp)	1
